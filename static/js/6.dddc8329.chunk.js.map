{"version":3,"sources":["../node_modules/reactstrap/es/CardBody.js","components/modals/DeleteModal.tsx"],"names":["_excluded","propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","innerRef","oneOfType","func","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","DeleteModal","useModal","closeDeleteModal","isDeleteModal","strings","useLocalization","useState","loading","setLoading","isOpen","lg","delText","color","type","onClick","deleteIt","disabled","size"],"mappings":"0GAAA,6EAEIA,EAAY,CAAC,YAAa,YAAa,WAAY,OAKnDC,EAAY,CACdC,IAAKC,IACLC,UAAWC,IAAUC,OACrBC,UAAWF,IAAUG,OACrBC,SAAUJ,IAAUK,UAAU,CAACL,IAAUG,OAAQH,IAAUC,OAAQD,IAAUM,QAM3EC,EAAW,SAAkBC,GAC/B,IAAIT,EAAYS,EAAMT,UAClBG,EAAYM,EAAMN,UAClBE,EAAWI,EAAMJ,SACjBK,EAAMD,EAAMX,IACZa,EAAaC,YAA8BH,EAAOb,GAElDiB,EAAUC,YAAgBC,IAAWf,EAAW,aAAcG,GAClE,OAAoBa,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEX,UAAWa,EACXM,IAAKd,MAITG,EAASX,UAAYA,EACrBW,EAASY,aAnBU,CACjBtB,IAAK,OAmBQU,O,4JCsCAa,UApDiC,SAACZ,GAC/C,MAA4Ca,cAApCC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,cAClBC,EAAiBC,cAAjBD,QACR,EAA8BE,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,cAAC,IAAD,CACE7B,UAAU,sCACV8B,OAAQN,EAFV,SAIE,qBAAKxB,UAAU,cAAf,SACE,eAAC,IAAD,CAAMA,UAAU,6BAAhB,UACE,cAAC,IAAD,CAAYA,UAAU,iBAAtB,SACE,qBAAKA,UAAU,cAAf,wBAEF,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAK+B,GAAG,KAAK/B,UAAU,wBAAvB,UACG,IACAS,EAAMuB,QAAUvB,EAAMuB,QAAUP,EAAO,kBAG5C,cAAC,IAAD,CAAKzB,UAAU,iBAAf,SACE,eAAC,IAAD,CAAK+B,GAAG,KAAK/B,UAAU,cAAvB,UACE,cAAC,IAAD,CACEiC,MAAM,YACN,eAAa,QACbC,KAAK,SACLC,QAAS,kBAAMZ,KAJjB,oBAQA,cAAC,IAAD,CACEU,MAAM,UACNC,KAAK,SACLC,QAAS,WACPN,GAAW,GACXpB,EAAM2B,YAERC,SAAUT,EAPZ,SASGA,EAAU,cAAC,IAAD,CAASU,KAAK,OAAU","file":"static/js/6.dddc8329.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport { useModal } from \"contexts/ModalContextProvider\";\r\nimport { useLocalization } from \"contexts/LocalizationContextProvider\";\r\n\r\ninterface DeleteModalProps {\r\n  delText?: String;\r\n  deleteIt: Function;\r\n}\r\n\r\nconst DeleteModal: React.FC<DeleteModalProps> = (props) => {\r\n  const { closeDeleteModal, isDeleteModal } = useModal();\r\n  const { strings }: any = useLocalization();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered confirm-modal\"\r\n      isOpen={isDeleteModal}\r\n    >\r\n      <div className=\"modal-body1\">\r\n        <Card className=\"bg-secondary border-0 mb-0\">\r\n          <CardHeader className=\"bg-transparent\">\r\n            <div className=\"text-center\">Warning!</div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col lg=\"12\" className=\"text-center pb-4 pt-2\">\r\n                {\" \"}\r\n                {props.delText ? props.delText : strings[\"are_you_sure\"]}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"bg-transparent\">\r\n              <Col lg=\"12\" className=\"text-center\">\r\n                <Button\r\n                  color=\"secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => closeDeleteModal()}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  color=\"warning\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    props.deleteIt();\r\n                  }}\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? <Spinner size=\"sm\" /> : \"Delete\"}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n"],"sourceRoot":""}