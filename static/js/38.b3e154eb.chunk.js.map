{"version":3,"sources":["components/toaster/Alert.tsx","components/toaster/useTimeout.ts","components/toaster/Message.tsx","components/toaster/ToastManager.tsx","components/toaster/Toast.tsx","components/toaster/index.ts","pages/ResetPassword.tsx"],"names":["Close","onClose","className","type","onClick","Alert","id","title","useTimeout","callback","delay","savedCallback","React","current","setTimeout","clearTimeout","Message","message","position","onRequestRemove","requestClose","duration","container","timeout","localShow","setLocalShow","isFromTop","close","animation","config","mass","tension","friction","from","opacity","height","transform","enter","next","getBoundingClientRect","leave","onRest","transition","useTransition","style","display","flexDirection","alignItems","includes","getStyle","onMouseEnter","onMouseLeave","props","item","div","pointerEvents","ref","defaultState","top","bottom","ToastManager","state","notify","options","toast","createToastState","isTop","setState","prev","closeAll","Object","keys","forEach","pos","p","closeToast","idCounter","hasOwnProperty","showing","removeToast","String","map","filter","maxWidth","zIndex","margin","textAlign","right","left","this","thisPosition","toasts","key","isBrowser","window","document","PORTAL_ID","Toaster","createNotification","removeAll","bindNotify","fn","portalElement","existingPortalElement","getElementById","el","createElement","body","appendChild","ReactDOM","toaster","initialValues","password","confirmPassword","ResetPassword","strings","useLocalization","navigate","useNavigate","useForm","setLoading","resetPassword","values","token","then","res","passwordReset","catch","err","setGlobalErrMsg","errorCode","resetPasswordValidate","errors","handleChange","handleSubmit","useAuth","isPasswordResetTokenValid","useState","loading","isTokenValid","setIsTokenValid","globalErrMsg","useParams","useEffect","lead","lg","md","color","role","onSubmit","classnames","addonType","placeholder","value","onChange","name","autoComplete","size","xs","to"],"mappings":"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","file":"static/js/38.b3e154eb.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { MessageType } from \"./Message\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  title: React.ReactNode | string;\r\n  onClose: () => void;\r\n  type?: MessageType;\r\n}\r\n\r\nconst Alert = ({ id, title, onClose, type }: Props) => {\r\n  return (\r\n    <div id={id} className=\"Toaster__alert\">\r\n      {typeof title === \"string\" ? (\r\n        <div className={`Toaster__alert_text ${type === 'error' ? 'danger' : type}`}>{title}</div>\r\n      ) : (\r\n        title\r\n      )}\r\n\r\n      {onClose && <Close onClose={onClose} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Close = ({ onClose }: { onClose: () => void }) => (\r\n  <button\r\n    className=\"Toaster__alert_close\"\r\n    type=\"button\"\r\n    aria-label=\"Close\"\r\n    onClick={onClose}\r\n  >\r\n    <span aria-hidden=\"true\">Ã—</span>\r\n  </button>\r\n);\r\n\r\nexport default Alert;","import * as React from \"react\";\r\n\r\ntype Callback = () => void;\r\n\r\nexport function useTimeout(callback: Callback, delay: number | null) {\r\n  const savedCallback = React.useRef<Callback | null>();\r\n\r\n  // Remember the latest callback.\r\n  React.useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      if (savedCallback.current) {\r\n        savedCallback.current();\r\n      }\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n}","import * as React from \"react\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport ReachAlert from \"@reach/alert\";\r\nimport Alert from \"./Alert\";\r\nimport { useTimeout } from \"./useTimeout\";\r\nimport POSITIONS from \"./Positions\";\r\n\r\ninterface MessageCallback {\r\n  id: string;\r\n  onClose: () => void;\r\n}\r\n\r\nexport type MessageType = \"default\" | \"success\" | \"error\";\r\n\r\nexport type PositionsType = keyof typeof POSITIONS;\r\n\r\nconst getStyle = (position: PositionsType) => {\r\n  let style = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  } as React.CSSProperties;\r\n\r\n  if (position.includes(\"right\")) {\r\n    style.alignItems = \"flex-end\";\r\n  } else if (position.includes(\"left\")) {\r\n    style.alignItems = \"flex-start\";\r\n  }\r\n\r\n  return style;\r\n};\r\n\r\nexport type MessageProp =\r\n  | React.ReactNode\r\n  | ((callback: MessageCallback) => React.ReactNode)\r\n  | string;\r\n\r\nexport interface MessageOptions {\r\n  id: string;\r\n  duration: number | null;\r\n  type: MessageType;\r\n  onRequestRemove: () => void;\r\n  onRequestClose: () => void;\r\n  showing: boolean;\r\n  position: PositionsType;\r\n}\r\n\r\ninterface Props extends MessageOptions {\r\n  message: MessageProp;\r\n  zIndex?: number;\r\n  requestClose?: boolean;\r\n  position: PositionsType;\r\n}\r\n\r\nexport const Message = ({\r\n  id,\r\n  message,\r\n  position,\r\n  onRequestRemove,\r\n  requestClose = false,\r\n  duration = 30000,\r\n  type\r\n}: Props) => {\r\n  const container = React.useRef<HTMLDivElement | null>(null);\r\n  const [timeout, setTimeout] = React.useState(duration);\r\n  const [localShow, setLocalShow] = React.useState(true);\r\n\r\n  const isFromTop =\r\n    position === \"top-left\" || position === \"top-right\" || position === \"top\";\r\n\r\n  useTimeout(close, timeout);\r\n\r\n  const animation = {\r\n    config: { mass: 1, tension: 185, friction: 26 },\r\n    from: {\r\n      opacity: 1,\r\n      height: 0,\r\n      transform: `translateY(${isFromTop ? \"-100%\" : 0}) scale(1)`\r\n    },\r\n    enter: () => (next: any) =>\r\n      next({\r\n        opacity: 1,\r\n        height: container.current!.getBoundingClientRect().height,\r\n        transform: `translateY(0) scale(1)`\r\n      }),\r\n    leave: {\r\n      opacity: 0,\r\n      height: 0,\r\n      transform: `translateY(0 scale(0.9)`\r\n    },\r\n    onRest\r\n  } as any;\r\n\r\n  const transition = useTransition(localShow, animation);\r\n  const style = React.useMemo(() => getStyle(position), [position]);\r\n\r\n  function onMouseEnter() {\r\n    setTimeout(null);\r\n  }\r\n\r\n  function onMouseLeave() {\r\n    setTimeout(duration);\r\n  }\r\n\r\n  function onRest() {\r\n    if (!localShow) {\r\n      onRequestRemove();\r\n    }\r\n  }\r\n\r\n  function close() {\r\n    setLocalShow(false);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (requestClose) {\r\n      setLocalShow(false);\r\n    }\r\n  }, [requestClose]);\r\n\r\n  function renderMessage() {\r\n    if (typeof message === \"string\" || React.isValidElement(message)) {\r\n      return <Alert id={id} title={message} type={type} onClose={close} />;\r\n    }\r\n\r\n    if (typeof message === \"function\") {\r\n      return message({\r\n        id,\r\n        onClose: close\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {transition(\r\n        ( props, item ) =>\r\n          item && (\r\n            <animated.div\r\n              key={'1'}\r\n              className=\"Toaster__message\"\r\n              onMouseEnter={onMouseEnter}\r\n              onMouseLeave={onMouseLeave}\r\n              style={{\r\n                opacity: props.opacity,\r\n                height: props.height,\r\n                ...style\r\n              }}\r\n            >\r\n              <animated.div\r\n                style={{\r\n                  transform: props.transform,\r\n                  pointerEvents: \"auto\"\r\n                }}\r\n                ref={container}\r\n                className=\"Toaster__message-wrapper\"\r\n              >\r\n                <ReachAlert>{renderMessage()}</ReachAlert>\r\n              </animated.div>\r\n            </animated.div>\r\n          )\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};","import * as React from \"react\";\r\nimport {\r\n  Message,\r\n  PositionsType,\r\n  MessageType,\r\n  MessageOptions,\r\n  MessageProp\r\n} from \"./Message\";\r\n\r\ninterface Props {\r\n  notify: (fn: Function, closeAll: Function, close: Function) => void;\r\n}\r\n\r\nexport interface MessageOptionalOptions {\r\n  type?: MessageType;\r\n  duration?: number | null;\r\n  position?: PositionsType;\r\n}\r\n\r\ninterface ToastArgs extends MessageOptions {\r\n  message: MessageProp;\r\n}\r\n\r\ntype State = {\r\n  top: Array<ToastArgs>;\r\n  \"top-left\": Array<ToastArgs>;\r\n  \"top-right\": Array<ToastArgs>;\r\n  \"bottom-left\": Array<ToastArgs>;\r\n  bottom: Array<ToastArgs>;\r\n  \"bottom-right\": Array<ToastArgs>;\r\n};\r\n\r\nconst defaultState: State = {\r\n  top: [],\r\n  \"top-left\": [],\r\n  \"top-right\": [],\r\n  \"bottom-left\": [],\r\n  bottom: [],\r\n  \"bottom-right\": []\r\n};\r\n\r\nexport default class ToastManager extends React.Component<Props, State> {\r\n  static idCounter = 0;\r\n\r\n  state: State = defaultState;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    props.notify(this.notify, this.closeAll, this.closeToast);\r\n  }\r\n\r\n  notify = (message: MessageProp, options: MessageOptionalOptions) => {\r\n    const toast = this.createToastState(message, options);\r\n    const { position } = toast;\r\n\r\n    // prepend the toast for toasts positioned at the top of\r\n    // the screen, otherwise append it.\r\n    const isTop = position.includes(\"top\");\r\n\r\n    this.setState(prev => {\r\n      return {\r\n        ...prev,\r\n        [position]: isTop\r\n          ? [toast, ...prev[position]]\r\n          : [...prev[position], toast]\r\n      };\r\n    });\r\n    return { id: toast.id, position: toast.position };\r\n  };\r\n\r\n  closeAll = () => {\r\n    Object.keys(this.state).forEach(pos => {\r\n      const p = pos as keyof State;\r\n      const position = this.state[p];\r\n      position.forEach((toast: any) => {\r\n        this.closeToast(toast.id, p);\r\n      });\r\n    });\r\n  };\r\n\r\n  createToastState = (\r\n    message: MessageProp,\r\n    options: MessageOptionalOptions\r\n  ) => {\r\n    const id = ++ToastManager.idCounter;\r\n\r\n    // a bit messy, but object.position returns a number because\r\n    // it's a method argument.\r\n    const position =\r\n      options.hasOwnProperty(\"position\") && typeof options.position === \"string\"\r\n        ? options.position\r\n        : \"top\";\r\n\r\n    return {\r\n      id,\r\n      message,\r\n      position,\r\n      showing: true,\r\n      duration:\r\n        typeof options.duration === \"undefined\" ? 5000 : options.duration,\r\n      onRequestRemove: () => this.removeToast(String(id), position),\r\n      type: options.type\r\n    };\r\n  };\r\n\r\n  closeToast = (id: string, position: PositionsType) => {\r\n    this.setState(prev => {\r\n      return {\r\n        ...prev,\r\n        [position]: prev[position].map(toast => {\r\n          if (toast.id !== id) return toast;\r\n          return {\r\n            ...toast,\r\n            requestClose: true\r\n          };\r\n        })\r\n      };\r\n    });\r\n  };\r\n\r\n  // actually fully remove the toast\r\n  removeToast = (id: string, position: PositionsType) => {\r\n    this.setState(prev => {\r\n      return {\r\n        ...prev,\r\n        [position]: prev[position].filter(toast => toast.id !== id)\r\n      };\r\n    });\r\n  };\r\n\r\n  getStyle = (position: PositionsType) => {\r\n    let style: React.CSSProperties = {\r\n      maxWidth: \"560px\",\r\n      position: \"fixed\",\r\n      zIndex: 5500,\r\n      pointerEvents: \"none\"\r\n    };\r\n\r\n    if (position === \"top\" || position === \"bottom\") {\r\n      style.margin = \"0 auto\";\r\n      style.textAlign = \"center\";\r\n    }\r\n\r\n    if (position.includes(\"top\")) {\r\n      style.top = 0;\r\n    }\r\n\r\n    if (position.includes(\"bottom\")) {\r\n      style.bottom = 0;\r\n    }\r\n\r\n    if (!position.includes(\"left\")) {\r\n      style.right = 0;\r\n    }\r\n\r\n    if (!position.includes(\"right\")) {\r\n      style.left = 0;\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return Object.keys(this.state).map(thisPosition => {\r\n      const pos = thisPosition as keyof State;\r\n      const toasts = this.state[pos];\r\n      return (\r\n        <span\r\n          key={thisPosition}\r\n          className={\"Toaster__manager-\" + pos}\r\n          style={this.getStyle(pos)}\r\n        >\r\n          {toasts.map((toast: ToastArgs) => {\r\n            return <Message {...toast} position={pos} key={toast.id} />;\r\n          })}\r\n        </span>\r\n      );\r\n    });\r\n  }\r\n}","import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport ToastManager, { MessageOptionalOptions } from \"./ToastManager\";\r\nimport { MessageProp, PositionsType } from \"./Message\";\r\n\r\nconst isBrowser =\r\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\r\nconst PORTAL_ID = \"react-toast\";\r\n\r\nclass Toaster {\r\n  createNotification?: Function;\r\n  removeAll?: Function;\r\n  closeToast?: Function;\r\n\r\n  constructor() {\r\n    if (!isBrowser) {\r\n      return;\r\n    }\r\n\r\n    let portalElement;\r\n    const existingPortalElement = document.getElementById(PORTAL_ID);\r\n\r\n    if (existingPortalElement) {\r\n      portalElement = existingPortalElement;\r\n    } else {\r\n      const el = document.createElement(\"div\");\r\n      el.id = PORTAL_ID;\r\n      el.className = \"Toaster\";\r\n      if (document.body != null) {\r\n        document.body.appendChild(el);\r\n      }\r\n      portalElement = el;\r\n    }\r\n\r\n    ReactDOM.render(\r\n      <ToastManager notify={this.bindNotify as any} />,\r\n      portalElement\r\n    );\r\n  }\r\n\r\n  closeAll = () => {\r\n    if (this.removeAll) {\r\n      this.removeAll();\r\n    }\r\n  };\r\n\r\n  bindNotify = (fn: Function, removeAll: Function, closeToast: Function) => {\r\n    this.createNotification = fn;\r\n    this.removeAll = removeAll;\r\n    this.closeToast = closeToast;\r\n  };\r\n\r\n  notify = (message: MessageProp, options: MessageOptionalOptions = {}) => {\r\n    if (this.createNotification) {\r\n      return this.createNotification(message, options);\r\n    }\r\n  };\r\n\r\n  close = (id: number, position: PositionsType) => {\r\n    if(this.closeToast){\r\n      this.closeToast(id, position);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Toaster;","import Toaster from \"./Toast\";\r\n\r\nconst toaster = new Toaster();\r\n\r\nexport { default as Position } from \"./Positions\";\r\n\r\nexport default toaster;","import { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"contexts/AuthContextProvider\";\r\nimport useForm from \"helpers/useForm\";\r\nimport { resetPasswordValidate } from \"helpers/validateRules\";\r\nimport { useLocalization } from \"contexts/LocalizationContextProvider\";\r\nimport { errorCode } from \"utils/ServiceAPIUtil\";\r\nimport toaster from \"components/toaster\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport AuthHeader from \"containers/Auth/AuthHeader\";\r\nimport AuthNavbar from \"containers/Auth/AuthNavbar\";\r\nimport HomeFooter from \"containers/Home/HomeFooter\";\r\n\r\nconst initialValues = {\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst ResetPassword = () => {\r\n  const { strings }: any = useLocalization();\r\n  const navigate = useNavigate();\r\n  const { values, errors, handleChange, handleSubmit } =\r\n    useForm(initialValues, handleSubmitCB, resetPasswordValidate);\r\n  const { resetPassword, isPasswordResetTokenValid } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [globalErrMsg, setGlobalErrMsg] = useState(\"\");\r\n  const { token } = useParams();\r\n\r\n  function handleSubmitCB() {\r\n    setLoading(true);\r\n    resetPassword({\r\n      password: values.password,\r\n      token: (token || \"\"),\r\n    })\r\n      .then((res: any) => {\r\n        if (res.passwordReset && res.passwordReset === 'success') {\r\n          toaster.notify(\"Password Reset Success\", {\r\n            position: \"top-right\",\r\n            type: \"success\",\r\n          });\r\n        }\r\n        setTimeout(() => {\r\n          navigate(\"/login\");\r\n        }, 200);\r\n        setLoading(false);\r\n      })\r\n      .catch((err: any) => {\r\n        setGlobalErrMsg(\r\n          strings[\"error.\" + errorCode(err)] || strings[\"error.e10100\"]\r\n        );\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    isPasswordResetTokenValid({ token: token || \"\" })\r\n      .then((res: any) => {\r\n        if (res.isTokenValid) setIsTokenValid(true);\r\n        setLoading(false);\r\n      })\r\n      .catch((err: any) => {\r\n        setGlobalErrMsg(\r\n          strings[\"error.\" + errorCode(err)] || strings[\"error.e10100\"]\r\n        );\r\n        setLoading(false);\r\n      });\r\n      //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [token]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-content bg-default\">\r\n        <AuthNavbar />\r\n        <AuthHeader title=\"Forgot Password\" lead=\"\" />\r\n        <Container className=\"mt--8 pb-5\">\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"5\" md=\"7\">\r\n              <Card className=\"bg-secondary border-0 mb-0\">\r\n                <CardBody className=\"px-lg-5 py-lg-5\">\r\n                  <div className=\"text-center text-muted mb-4\">\r\n                    <small>Forgot Your Password?</small>\r\n                  </div>\r\n                  {globalErrMsg !== \"\" && (\r\n                    <div\r\n                      className=\"text-center mb-3 error\"\r\n                      style={{ color: \"#B94A48\" }}\r\n                    >\r\n                      {globalErrMsg}\r\n                    </div>\r\n                  )}\r\n                  {isTokenValid && <Form role=\"form\" onSubmit={handleSubmit}>\r\n                    <FormGroup className={classnames(\"mb-3 focused\")}>\r\n                      <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-email-83\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Password\"\r\n                          value={values.password}\r\n                          type=\"password\"\r\n                          onChange={handleChange}\r\n                          name=\"password\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      </InputGroup>\r\n                      {errors.password && (\r\n                        <span className=\"error\">{errors.password}</span>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup className={classnames(\"mb-3 focused\")}>\r\n                      <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-email-83\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Confirm Password\"\r\n                          value={values.confirmPassword}\r\n                          type=\"password\"\r\n                          onChange={handleChange}\r\n                          name=\"confirmPassword\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      </InputGroup>\r\n                      {errors.confirmPassword && (\r\n                        <span className=\"error\">{errors.confirmPassword}</span>\r\n                      )}\r\n                    </FormGroup>\r\n                    <div className=\"text-center\">\r\n                      <Button className=\"my-4\" color=\"info\" type=\"submit\">\r\n                        {loading ? <Spinner size=\"sm\" /> : \"Submit\"}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>}\r\n                </CardBody>\r\n              </Card>\r\n              <Row className=\"mt-3\">\r\n                <Col xs=\"6\">\r\n                  <Link className=\"text-light\" to=\"/login\">\r\n                    <small>Login</small>\r\n                  </Link>\r\n                </Col>\r\n                <Col className=\"text-right\" xs=\"6\">\r\n                  <Link className=\"text-light\" to=\"/signup\">\r\n                    <small>Sign up</small>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <HomeFooter />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"sourceRoot":""}