{"version":3,"sources":["config/constant.ts","contexts/LocalizationContextProvider.tsx","contexts/ModalContextProvider.tsx","components/Loading.tsx","utils/CommonUtils.ts","routes/routes.tsx","utils/ApolloUtils.ts","helpers/session.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/ServiceAPIUtil.ts","graphql/auth.ts","contexts/AuthContextProvider.tsx","graphql/users.ts"],"names":["require","config","console","log","process","API_URL","JWTToken","DEFAULT_LANGUAGE","APP_LANGUAGE_KEY","strings","LocalizedStrings","en","LocalizationContext","createContext","setAppLanguage","_","appLanguage","LocalizationContextProvider","children","useState","setLanguage","language","setItem","useEffect","debug","initAppLanguage","a","getItem","currentLanguage","Provider","value","useLocalization","context","useContext","undefined","Error","initialState","isModal","modalData","isDeleteModal","openModal","closeModal","openDeleteModal","deleteModalData","closeDeleteModal","ModalContext","ModalContextProvider","useReducer","state","action","name","dispatch","modalActions","React","useMemo","useModal","Loading","style","width","height","display","alignItems","justifyContent","animation","variant","key","localStorage","error","getToken","accessToken","isToken","tokenData","JSON","parse","validateFileExt","fileName","validFileExtensions","length","blnValid","j","validExt","substr","toLowerCase","getComparisonData","reqValues","axios","method","url","data","res","NoMatch","lazy","Home","Login","Signup","VendorSignup","ForgotPassword","ResetPassword","Dashboard","AdminResetPassword","Users","OrgVendors","OrgItems","RFQ","VendorRFQBiddingDetails","BuyerRFQBiddingDetails","Profile","VendorProfile","Comparison","GuestRoute","useAuth","location","accountProfile","useLocation","to","from","ProtectedRoute","RoutesScreen","fallback","path","element","authLink","ApolloLink","operation","forward","setContext","headers","authorization","uploadLink","createUploadLink","uri","credentials","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","SessionTimeout","timeStamp","events","setSecond","isOpen","setOpen","logout","warningInactiveInterval","useRef","startTimerInterval","timeChecker","current","setTimeout","storedTimeStamp","warningInactive","timeString","clearTimeout","setInterval","diff","moment","duration","minPast","minutes","leftSecond","seconds","clearInterval","removeItem","resetTimer","useCallback","forEach","event","window","addEventListener","Modal","className","type","onClick","Button","color","App","CookiesProvider","AuthContextProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","isSuccess","endpoint","payload","responseCode","errorCode","err","networkError","graphQLErrors","message","LOGIN_QUERY","gql","FORGOT_PASSWORD_QUERY","RESET_PASSWORD_QUERY","PASSWORD_RESET_TOKEN_VALID_QUERY","REFRESH_TOKEN_QUERY","userType","userAccessType","refetchAccountProfile","signup","vendorSignup","login","forgotPassword","resetPassword","isPasswordResetTokenValid","refreshToken","AuthContext","apolloClient","useApolloClient","useMutation","SIGNUP_QUERY","userSignup","VENDOR_SIGNUP_QUERY","userVendorSignup","_state","authCheck","acc","doLogout","doLogin","response","accessTokenDecrypt","jwt","verify","stringify","getAccountProfile","query","ACCOUNT_PROFILE_QUERY","variables","input","useCookies","setCookie","removeCookie","authActions","username","password","rememberMe","fetchPolicy","email","token","oldPassword","passwordResetTokenValid","formValues","authChildren","GET_VENDOR_PROFILE_QUERY","GET_DASHBOARD_OVERVIEW_QUERY","GET_DASHBOARD_CHART_OVERVIEW_QUERY","GET_USERS_QUERY","GET_ORG_VENDORS_QUERY","CREATE_USER_MUTATION","CREATE_ORG_VENDOR_MUTATION","UPDATE_USER_MUTATION","UPDATE_USER_PROFILE_MUTATION","UPDATE_VENDOR_PROFILE_MUTATION","DELETE_USER_MUTATION","DELETE_ORG_VENDOR_MUTATION"],"mappings":"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","file":"static/js/main.9d8f7fda.chunk.js","sourcesContent":["require('dotenv').config();\r\nconsole.log(process.env.NODE_ENV);\r\nconst L_SITE_URL = \"http://localhost:3000\";\r\nexport const L_API_URL = \"http://localhost:8080/graphql\";\r\nconst P_SITE_URL = \"https://bidtoaster.com\";\r\nexport const P_API_URL = \"https://rfq2supplier.com/graphql\";\r\nexport const SITE_URL = process.env.NODE_ENV === \"production\" ? P_SITE_URL : L_SITE_URL;\r\nexport const API_URL = process.env.NODE_ENV === \"production\" ? P_API_URL : L_API_URL;\r\nexport const JWTToken = (process.env.REACT_APP_JWTToken || \"\");","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport LocalizedStrings from 'react-localization';\r\nimport en from '../localization/en.json';\r\nimport { getItem, setItem } from 'utils/CommonUtils';\r\n\r\nconst DEFAULT_LANGUAGE = 'en';\r\nconst APP_LANGUAGE_KEY = 'appLanguage';\r\n\r\nconst strings = new LocalizedStrings({ en });\r\n\r\nexport const LocalizationContext = createContext({\r\n    strings: strings,\r\n    setAppLanguage: (_: string) => {},\r\n    appLanguage: DEFAULT_LANGUAGE,\r\n});\r\n\r\n/**\r\n * LocalizationContextProvider manages localization/i18n strings for the app. It allows switching the app language\r\n * on the fly and allows overriding the localized strings via server configuration.\r\n */\r\nexport const LocalizationContextProvider = ({ children }: { children: React.ReactNode }) => {\r\n    const [appLanguage, setAppLanguage] = useState(DEFAULT_LANGUAGE);\r\n\r\n    const setLanguage = (language: string) => {\r\n        strings.setLanguage(language);\r\n        setAppLanguage(language);\r\n        setItem(APP_LANGUAGE_KEY, language);\r\n    };\r\n\r\n    /**\r\n     * Run the side-effect on initial load only\r\n     */\r\n    useEffect(() => {\r\n        console.debug('[LocalizationContext] Setup app lang');\r\n\r\n        const initAppLanguage = async () => {\r\n            const currentLanguage = await getItem(APP_LANGUAGE_KEY);\r\n            setLanguage(currentLanguage || DEFAULT_LANGUAGE);\r\n        };\r\n\r\n        // Determines and sets up the language to use\r\n        initAppLanguage();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <LocalizationContext.Provider\r\n            value={{\r\n                strings,\r\n                setAppLanguage: setLanguage,\r\n                appLanguage,\r\n            }}>\r\n            {children}\r\n        </LocalizationContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useLocalization = () => {\r\n    const context = useContext(LocalizationContext);\r\n    if (context === undefined) {\r\n        throw new Error('useLocalization must be used within a LocalizationContext');\r\n    }\r\n    return context;\r\n};\r\n\r\n","import React, { createContext, useReducer, useContext } from \"react\";\r\nimport { StringMap } from \"helpers/interfaces\";\r\nexport interface ModalState {\r\n  isModal: boolean;\r\n  modalData?: StringMap | null;\r\n  isDeleteModal: boolean;\r\n  openModal: (modalData: StringMap | null) => void;\r\n  closeModal: () => void;\r\n  openDeleteModal: () => void;\r\n  deleteModalData?: StringMap | null;\r\n  closeDeleteModal: () => void;\r\n}\r\n\r\nexport const initialState: ModalState = {\r\n  isModal: false,\r\n  modalData: null,\r\n  isDeleteModal: false,\r\n  openModal: () => {},\r\n  closeModal: () => {},\r\n  openDeleteModal: () => {},\r\n  deleteModalData: null,\r\n  closeDeleteModal: () => {},\r\n};\r\n\r\nexport const ModalContext = createContext(initialState);\r\n\r\nexport const ModalContextProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const controlReducer = (state: ModalState, action: any): ModalState => {\r\n    switch (action.name) {\r\n      case \"MODAL\":\r\n        return {\r\n          ...state,\r\n          isModal: !state.isModal,\r\n          modalData: action.modalData,\r\n        };\r\n      case \"DELETE_MODAL\":\r\n        return {\r\n          ...state,\r\n          isDeleteModal: !state.isDeleteModal,\r\n          deleteModalData: action.deleteModalData,\r\n        };\r\n      default:\r\n        return {\r\n          ...state,\r\n        };\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(controlReducer, initialState);\r\n\r\n  const modalActions = React.useMemo(\r\n    () => ({\r\n      openModal: (modalData: StringMap | null) => {\r\n        dispatch({\r\n          name: \"MODAL\",\r\n          modalData,\r\n        });\r\n      },\r\n      closeModal: () => {\r\n        dispatch({\r\n          name: \"MODAL\",\r\n          modalData: null,\r\n        });\r\n      },\r\n      openDeleteModal: (deleteModalData: StringMap | null = null) => {\r\n        dispatch({\r\n          name: \"DELETE_MODAL\",\r\n          deleteModalData,\r\n        });\r\n      },\r\n      closeDeleteModal: () => {\r\n        dispatch({\r\n          name: \"DELETE_MODAL\",\r\n          deleteModalData: null,\r\n        });\r\n      },\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        ...state,\r\n        ...modalActions,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useModal = () => {\r\n  const context = useContext(ModalContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useModal must be used within a ModalContext\");\r\n  }\r\n  return context;\r\n};\r\n","import React from 'react';\r\n\r\nimport {\r\n  Spinner,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nconst Loading = () => {\r\n\r\n    return (\r\n      <Row style={{ width: \"100%\", height: \"100vh\", display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n        <Spinner animation=\"border\" variant=\"dark\" />\r\n      </Row>\r\n    );\r\n}\r\n\r\nexport default Loading;","import axios from \"axios\";\r\n\r\nexport const setItem = async (key: string, value: any) => {\r\n  try {\r\n    await null;\r\n    return localStorage.setItem(key, value);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nexport const getItem = async (key: string) => {\r\n  try {\r\n    await null;\r\n    return localStorage.getItem(key);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nexport const getToken = () => {\r\n  let accessToken = null;\r\n  let isToken = localStorage.getItem(\"bt.token\" || \"\");\r\n  if (isToken !== null && isToken) {\r\n    let tokenData = JSON.parse(isToken);\r\n    if (tokenData !== null && tokenData.accessToken !== undefined) {\r\n      accessToken = tokenData.accessToken;\r\n    }\r\n  }\r\n\r\n  return accessToken;\r\n};\r\n\r\nexport function validateFileExt(fileName: any, validFileExtensions: any[]) {\r\n  if (fileName.length > 0) {\r\n    let blnValid = false;\r\n    for (let j = 0; j < validFileExtensions.length; j++) {\r\n      let validExt = validFileExtensions[j];\r\n      if (\r\n        fileName\r\n          .substr(fileName.length - validExt.length, validExt.length)\r\n          .toLowerCase() === validExt.toLowerCase()\r\n      ) {\r\n        blnValid = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!blnValid) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport async function getComparisonData(reqValues: {\r\n  comparisonName: string;\r\n  comparisonDate: string;\r\n  buyerDescription: any[];\r\n  buyerFileupload: any[];\r\n  vendorDescription: any[];\r\n  vendorFileupload: any[];\r\n}) {\r\n  const res = await axios({\r\n    method: \"post\",\r\n    url: \"http://52.187.104.169:5001/dashboard_comparison/\",\r\n    data: reqValues,\r\n    // headers: { \"Content-Type\": \"multipart/form-data\" },\r\n  });\r\n\r\n  return res;\r\n}\r\n","import { lazy, Suspense } from \"react\";\r\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\r\nimport Loading from \"components/Loading\";\r\nimport { useAuth } from \"contexts/AuthContextProvider\";\r\n\r\nconst NoMatch = lazy(() => import(\"components/NoMatch\"));\r\nconst Home = lazy(() => import(\"pages/Home\"));\r\nconst Login = lazy(() => import(\"pages/Login\"));\r\nconst Signup = lazy(() => import(\"pages/Signup\"));\r\nconst VendorSignup = lazy(() => import(\"pages/VendorSignup\"));\r\nconst ForgotPassword = lazy(() => import(\"pages/ForgotPassword\"));\r\nconst ResetPassword = lazy(() => import(\"pages/ResetPassword\"));\r\nconst Dashboard = lazy(() => import(\"pages/Dashboard\"));\r\nconst AdminResetPassword = lazy(\r\n  () => import(\"containers/Settings/AdminResetPassword\")\r\n);\r\nconst Users = lazy(() => import(\"pages/Users\"));\r\nconst OrgVendors = lazy(() => import(\"pages/OrgVendors\"));\r\nconst OrgItems = lazy(() => import(\"pages/OrgItems\"));\r\nconst RFQ = lazy(() => import(\"pages/RFQ\"));\r\nconst VendorRFQBiddingDetails = lazy(\r\n  () => import(\"containers/RFQ/VendorRFQBiddingDetails\")\r\n);\r\nconst BuyerRFQBiddingDetails = lazy(\r\n  () => import(\"containers/RFQ/BuyerRFQBiddingDetails\")\r\n);\r\nconst Profile = lazy(() => import(\"pages/Profile\"));\r\nconst VendorProfile = lazy(() => import(\"pages/VendorProfile\"));\r\nconst Comparison = lazy(() => import(\"pages/Comparison\"));\r\n\r\nfunction GuestRoute({ children }: { children: JSX.Element }) {\r\n  const { accessToken, accountProfile } = useAuth();\r\n  let location = useLocation();\r\n\r\n  if (localStorage.getItem('bt.token') === undefined) return null;\r\n  if (localStorage.getItem('bt.token')) {\r\n    return <Navigate to={\"/dashboard\"} state={{ from: location }} />;\r\n    // if(accountProfile && accountProfile.userAccessType === \"organization\")\r\n    // return <Navigate to={\"/users\"} state={{ from: location }} />;\r\n    // else if(accountProfile && (accountProfile.userAccessType === \"buyer\" || accountProfile.userAccessType === \"vendor\"))\r\n    // return <Navigate to={\"/rfq\"} state={{ from: location }} />;\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nfunction ProtectedRoute({ children }: { children: JSX.Element }) {\r\n  const { accessToken, accountProfile } = useAuth();\r\n  console.log('accountProfile', accountProfile);\r\n  console.log('accessToken', accessToken);\r\n  let location = useLocation();\r\n  if (localStorage.getItem('bt.token') === undefined) return null;\r\n  if (!localStorage.getItem('bt.token')) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} />;\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nconst RoutesScreen = () => {\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Routes>\r\n        <Route path=\"*\" element={<NoMatch />} />\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route\r\n          path=\"/login\"\r\n          element={\r\n            <GuestRoute>\r\n              <Login />\r\n            </GuestRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/signup\"\r\n          element={\r\n            <GuestRoute>\r\n              <Signup />\r\n            </GuestRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/vendor-signup\"\r\n          element={\r\n            <GuestRoute>\r\n              <VendorSignup />\r\n            </GuestRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/forgot-password\"\r\n          element={\r\n            <GuestRoute>\r\n              <ForgotPassword />\r\n            </GuestRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/reset-password/:token\"\r\n          element={\r\n            <GuestRoute>\r\n              <ResetPassword />\r\n            </GuestRoute>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Dashboard />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/settings/reset-password\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <AdminResetPassword />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/users\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Users />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/org-vendors\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <OrgVendors />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/org-items\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <OrgItems />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/rfq\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <RFQ />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/vendor/rfq/view/:id\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <VendorRFQBiddingDetails />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/buyer/rfq/view/:id\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <BuyerRFQBiddingDetails />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/profile\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Profile />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/vendor-profile\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <VendorProfile />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/comparison\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Comparison />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n      </Routes>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default RoutesScreen;\r\n","import {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  from,\r\n  ApolloLink,\r\n  ApolloProvider as Provider,\r\n} from \"@apollo/client\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { API_URL } from \"config/constant\";\r\nimport { getToken } from \"utils/CommonUtils\";\r\n\r\nconst authLink = new ApolloLink((operation, forward) => {\r\n  operation.setContext(({ headers }: any) => ({\r\n    headers: {\r\n      authorization: getToken() ? getToken() : \"\",\r\n      ...headers,\r\n    },\r\n  }));\r\n  \r\n  return forward(operation);\r\n});\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: API_URL,\r\n  credentials: \"same-origin\",\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: from([authLink.concat(uploadLink)]),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport const ApolloProvider = Provider;\r\n","import React, {\r\n    useState,\r\n    useEffect,\r\n    useCallback,\r\n    useRef,\r\n  } from 'react';\r\n  import moment from 'moment';\r\nimport { useAuth } from 'contexts/AuthContextProvider';\r\nimport { Button, Card, CardBody, CardHeader, Modal } from 'reactstrap';\r\n\r\n  \r\n  const SessionTimeout = () => {\r\n    const [events, setEvents] = useState(['click', 'load', 'scroll']);\r\n    const [second, setSecond] = useState(0);\r\n    const [isOpen, setOpen] = useState(false);\r\n    const {\r\n      accessToken,\r\n      logout,\r\n    } = useAuth();\r\n  \r\n    let timeStamp:any;\r\n    let warningInactiveInterval = useRef<any>();\r\n    let startTimerInterval = useRef<any>();\r\n  \r\n    // start inactive check\r\n    let timeChecker = () => {\r\n        // console.log('timeString csca');\r\n      startTimerInterval.current = setTimeout(() => {\r\n        let storedTimeStamp = localStorage.getItem('lastTimeStamp');\r\n        warningInactive(storedTimeStamp);\r\n      }, 60000 * 10);\r\n    };\r\n  \r\n    // warning timer\r\n    let warningInactive = (timeString:any) => {\r\n      clearTimeout(startTimerInterval.current);\r\n  \r\n      warningInactiveInterval.current = setInterval(() => {\r\n        const maxTime = 2;\r\n        const popTime = 1;\r\n  \r\n        const diff = moment.duration(moment().diff(moment(timeString)));\r\n        const minPast = diff.minutes();\r\n        const leftSecond = 60 - diff.seconds();\r\n        if (minPast === popTime) {\r\n          setSecond(leftSecond);\r\n          setOpen(true);\r\n        }\r\n  \r\n        if (minPast === maxTime) {\r\n          clearInterval(warningInactiveInterval.current);\r\n          setOpen(false);\r\n          localStorage.removeItem('lastTimeStamp');\r\n          logout();\r\n        }\r\n      }, 1000);\r\n    };\r\n  \r\n    // reset interval timer\r\n    let resetTimer = useCallback(() => {\r\n      clearTimeout(startTimerInterval.current);\r\n      clearInterval(warningInactiveInterval.current);\r\n        // console.log('lastTimeStamp', accessToken);\r\n        \r\n      if (localStorage.getItem('bt.token')) {\r\n        timeStamp = moment();\r\n        localStorage.setItem('lastTimeStamp', timeStamp);\r\n      } else {\r\n        clearInterval(warningInactiveInterval.current);\r\n        localStorage.removeItem('lastTimeStamp');\r\n      }\r\n      timeChecker();\r\n      setOpen(false);\r\n    }, [accessToken]);\r\n  \r\n    // handle close popup\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n  \r\n      resetTimer();\r\n    };\r\n  \r\n    useEffect(() => {\r\n      events.forEach((event) => {\r\n        window.addEventListener(event, resetTimer);\r\n      });\r\n  \r\n      timeChecker();\r\n  \r\n      return () => {\r\n        clearTimeout(startTimerInterval.current);\r\n        //   resetTimer();\r\n      };\r\n    }, [resetTimer, events, timeChecker]);\r\n  \r\n    if (!isOpen) {\r\n      return null;\r\n    }\r\n  \r\n    // change fragment to modal and handleclose func to close\r\n    return (\r\n        <div>\r\n        <Modal className=\"modal-dialog-centered\" isOpen={isOpen}>\r\n            <div className=\"modal-header\">\r\n            <strong>Session Expire Warning</strong>\r\n            <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => resetTimer()}>\r\n                <span aria-hidden={true}>×</span>\r\n            </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <p>your session will expire in.</p>\r\n            <p>Do you want to extend the session?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n            <Button color=\"primary\" type=\"button\" onClick={() => logout()}>Logout</Button>\r\n            <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={()=> {resetTimer() }}>Extend Session</Button>\r\n            </div>\r\n        </Modal>\r\n        </div>\r\n         )\r\n  };\r\n  \r\n  export default SessionTimeout;","import { BrowserRouter } from \"react-router-dom\";\r\nimport Routes from \"routes/routes\";\r\nimport { AuthContextProvider } from \"contexts/AuthContextProvider\";\r\nimport { LocalizationContextProvider } from \"contexts/LocalizationContextProvider\";\r\nimport { ModalContextProvider } from \"contexts/ModalContextProvider\";\r\nimport { ApolloProvider, client } from \"utils/ApolloUtils\";\r\nimport unspscDataList from \"assets/json/unspsc.json\";\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport SessionTimeout from \"helpers/session\";\r\n\r\nconst App = () => {\r\n//   window.addEventListener(\"beforeunload\", (ev) => {\r\n//     ev.preventDefault();\r\n//     console.log('close tab', localStorage.getItem('bt.token'));\r\n//     // localStorage.clear();\r\n//     // return ev.returnValue = '';\r\n//     if (window.performance) {\r\n//       console.info(\"window.performance work's fine on this browser\");\r\n//     }\r\n//       if (performance.navigation.type == 1) {\r\n//         console.info( \"This page is reloaded\" );\r\n//       } else {\r\n//         localStorage.removeItem('bt.token');\r\n//         console.info( \"This page is not reloaded\");\r\n//       }\r\n// });\r\n  return (\r\n    <BrowserRouter>\r\n      <ApolloProvider client={client}>\r\n          <CookiesProvider>\r\n          <LocalizationContextProvider>\r\n            <AuthContextProvider>\r\n              <ModalContextProvider>\r\n                <Routes />\r\n                <SessionTimeout />\r\n              </ModalContextProvider>\r\n            </AuthContextProvider>\r\n          </LocalizationContextProvider>\r\n        </CookiesProvider>\r\n      </ApolloProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"./assets/css/argon-dashboard-pro-react.css\";\r\nimport \"./assets/css/common.css\";\r\nimport \"./assets/css/toast.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export interface AccountProfile {\r\n  id: number;\r\n  firstName: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n}\r\n\r\nexport const isSuccess = (\r\n  endpoint: string,\r\n  payload: { [key: string]: any } | undefined | null\r\n) => {\r\n  return payload && payload[endpoint] && payload[endpoint].responseCode === \"1\";\r\n};\r\n\r\nexport const errorCode = (err: { [key: string]: any }) => {\r\n  let errorCode = \"\";\r\n  if (err.networkError) {\r\n    errorCode = err.networkError;\r\n  } else if (err.graphQLErrors) {\r\n    err.graphQLErrors.forEach((err: any) => {\r\n      errorCode = err.message;\r\n    });\r\n  }\r\n  return errorCode;\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN_QUERY = gql`\r\n    query($input: LoginRequest) {\r\n      login(input: $input) {\r\n          responseCode\r\n          data\r\n      }\r\n    }\r\n`;\r\n\r\nexport const FORGOT_PASSWORD_QUERY = gql`\r\n    query($input: ForgotPasswordRequest) {\r\n      forgotPassword(input: $input) {\r\n          responseCode\r\n          data\r\n      }\r\n    }\r\n`;\r\n\r\nexport const RESET_PASSWORD_QUERY = gql`\r\n    query($input: ResetPasswordRequest) {\r\n      resetPassword(input: $input) {\r\n          responseCode\r\n          data\r\n      }\r\n    }\r\n`;\r\n\r\nexport const PASSWORD_RESET_TOKEN_VALID_QUERY = gql`\r\n    query($input: PasswordResetTokenValidRequest) {\r\n      passwordResetTokenValid(input: $input) {\r\n          responseCode\r\n          data\r\n      }\r\n    }\r\n`;\r\n\r\nexport const REFRESH_TOKEN_QUERY = gql`\r\n    query($input: RefreshTokenRequest) {\r\n      refreshToken(input: $input) {\r\n          responseCode\r\n          data\r\n      }\r\n    }\r\n`;","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useContext,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport { getItem, setItem } from \"utils/CommonUtils\";\r\nimport { isSuccess } from \"utils/ServiceAPIUtil\";\r\nimport { useApolloClient, useMutation } from \"@apollo/client\";\r\nimport {\r\n  LOGIN_QUERY,\r\n  REFRESH_TOKEN_QUERY,\r\n  FORGOT_PASSWORD_QUERY,\r\n  RESET_PASSWORD_QUERY,\r\n  PASSWORD_RESET_TOKEN_VALID_QUERY,\r\n} from \"graphql/auth\";\r\nimport {\r\n  SIGNUP_QUERY,\r\n  VENDOR_SIGNUP_QUERY,\r\n  ACCOUNT_PROFILE_QUERY,\r\n} from \"graphql/users\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { JWTToken } from \"config/constant\";\r\nimport { UserAccessType, USER_TYPE } from \"helpers/interfaces\";\r\nimport { StringMap } from \"helpers/interfaces\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport interface UserState {\r\n  userType: USER_TYPE;\r\n  error?: Error;\r\n  accessToken?: string;\r\n  userAccessType: UserAccessType;\r\n  accountProfile?: StringMap;\r\n  refetchAccountProfile: () => Promise<any>;\r\n  signup: ({\r\n    userAccessType,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phoneNumber,\r\n    organizationName,\r\n    organizationType,\r\n    natureOfBusiness,\r\n    companyRegistrationNo,\r\n    password,\r\n  }: {\r\n    userAccessType: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    organizationName: string;\r\n    organizationType: string;\r\n    natureOfBusiness: string;\r\n    companyRegistrationNo: string;\r\n    password: string;\r\n  }) => Promise<any>;\r\n  vendorSignup: (formValues: any) => Promise<any>;\r\n  login: ({\r\n    username,\r\n    password,\r\n    rememberMe\r\n  }: {\r\n    username: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n  }) => Promise<any>;\r\n  forgotPassword: ({ email }: { email: string }) => Promise<any>;\r\n  resetPassword: ({\r\n    token,\r\n    oldPassword,\r\n    password,\r\n  }: {\r\n    token: string;\r\n    oldPassword?: string;\r\n    password: string;\r\n  }) => Promise<any>;\r\n  isPasswordResetTokenValid: ({ token }: { token: string }) => Promise<any>;\r\n  refreshToken: (tokenData: any) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userType: \"INIT\",\r\n  error: undefined,\r\n  accessToken: undefined,\r\n  userAccessType: \"buyer\",\r\n  accountProfile:undefined,\r\n  refetchAccountProfile: async () => {},\r\n  signup: async () => {},\r\n  vendorSignup: async () => {},\r\n  login: async () => {},\r\n  forgotPassword: async () => {},\r\n  resetPassword: async () => {},\r\n  isPasswordResetTokenValid: async () => {},\r\n  refreshToken: async () => {},\r\n  logout: async () => {},\r\n};\r\n\r\nexport const AuthContext = createContext(initialState);\r\n\r\nexport const AuthContextProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const apolloClient = useApolloClient();\r\n  const [userSignup] = useMutation(SIGNUP_QUERY);\r\n  const [userVendorSignup] = useMutation(VENDOR_SIGNUP_QUERY);\r\n  // const [currentAccessToken, setCurrentAccessToken] = useState(\"\");\r\n\r\n  const controlReducer = (_state: UserState, action: any): UserState => {\r\n    switch (action.name) {\r\n      case \"LOG_IN\":\r\n        return {\r\n          ..._state,\r\n          userType: \"LOGGED_IN\",\r\n          error: undefined,\r\n          accessToken: action.accessToken,\r\n          userAccessType: action.userAccessType,\r\n          accountProfile: action.accountProfile,\r\n        };\r\n      case \"LOG_IN_ERROR\":\r\n        return {\r\n          ..._state,\r\n          userType: \"INIT\",\r\n          error: action.value,\r\n        };\r\n      case \"LOG_OUT\": {\r\n        return {\r\n          ..._state,\r\n          userType: \"NOT_LOGGED_IN\",\r\n          accessToken: \"\",\r\n          error: undefined,\r\n        };\r\n      }\r\n      case \"UPDATE_ACCOUNT_PROFILE\": {\r\n        return {\r\n          ..._state,\r\n          accountProfile: action.accountProfile,\r\n        };\r\n      }\r\n      default:\r\n        return {\r\n          ..._state,\r\n        };\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(controlReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Fetch the token from storage then navigate to our appropriate place\r\n    const authCheck = async () => {\r\n      try {\r\n        const tokenData = await getItem(\"bt.token\");\r\n        if (tokenData !== undefined && tokenData !== null) {\r\n          const tokenObj = JSON.parse(tokenData);\r\n          const acc = localStorage.getItem('bt.account_profile');\r\n          if(acc !== null && acc !== undefined)\r\n          dispatch({\r\n            name: \"UPDATE_ACCOUNT_PROFILE\",\r\n            accountProfile: JSON.parse(acc),\r\n          });\r\n          // await authActions.refreshToken(tokenObj.accessToken);\r\n          // await doLogin(tokenObj);\r\n        } else {\r\n          await doLogout();\r\n        }\r\n      } catch {\r\n        await doLogout();\r\n      }\r\n    };\r\n    authCheck();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const doLogin = async (response: { accessToken: string }) => {\r\n    const accessToken = response.accessToken;\r\n    const accessTokenDecrypt = jwt.verify(accessToken, JWTToken);\r\n    const userAccessType =\r\n      typeof accessTokenDecrypt === \"object\"\r\n        ? accessTokenDecrypt.userAccessType\r\n        : \"\";\r\n    const payload = JSON.stringify({ accessToken });\r\n    await setItem(\"bt.token\", payload);\r\n    // setCurrentAccessToken(accessToken);\r\n\r\n    dispatch({\r\n      name: \"LOG_IN\",\r\n      accessToken: accessToken,\r\n      userAccessType: userAccessType,\r\n      accountProfile: {},\r\n    });\r\n    await getAccountProfile(accessToken);\r\n  };\r\n\r\n  const doLogout = useCallback(async () => {\r\n    await setItem(\"bt.token\", \"\");\r\n    localStorage.removeItem('bt.account_profile');\r\n    // setCurrentAccessToken(\"\");\r\n    dispatch({ name: \"LOG_OUT\" });\r\n  }, []);\r\n\r\n  const getAccountProfile = useCallback(async (accessToken: string) => {\r\n    const { data } = await apolloClient.query({\r\n      query: ACCOUNT_PROFILE_QUERY,\r\n      variables: { input: { accessToken } },\r\n    });\r\n    if (isSuccess(\"getAccountProfile\", data)) {\r\n      await setItem(\"bt.account_profile\",  JSON.stringify(data.getAccountProfile.data[0]));\r\n      dispatch({\r\n        name: \"UPDATE_ACCOUNT_PROFILE\",\r\n        accountProfile: data.getAccountProfile.data[0],\r\n      });\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const [cookies, setCookie, removeCookie] = useCookies<any>(['loginUser']);\r\n  const authActions = React.useMemo(\r\n    () => ({\r\n      refetchAccountProfile: async () => {\r\n        if (state.accessToken) await getAccountProfile(state.accessToken);\r\n      },\r\n      login: async ({\r\n        username,\r\n        password,\r\n        rememberMe\r\n      }: {\r\n        username: string;\r\n        password: string;\r\n        rememberMe: boolean;\r\n      }) => {\r\n        const { data } = await apolloClient.query({\r\n          query: LOGIN_QUERY,\r\n          variables: { input: { username, password } },\r\n          fetchPolicy: \"no-cache\",\r\n        });\r\n        if (isSuccess(\"login\", data)) {\r\n          if(rememberMe){\r\n            setCookie('username', username, { path: '/' });\r\n            setCookie('password', password, { path: '/' });\r\n          } else {\r\n            removeCookie('username');\r\n            removeCookie('password');\r\n          }\r\n          await doLogin(data.login.data);\r\n        }\r\n      },\r\n\r\n      forgotPassword: async ({ email }: { email: string }) => {\r\n        const { data } = await apolloClient.query({\r\n          query: FORGOT_PASSWORD_QUERY,\r\n          variables: { input: { email } },\r\n        });\r\n        if (isSuccess(\"forgotPassword\", data)) {\r\n          return data.forgotPassword.data;\r\n        }\r\n      },\r\n\r\n      resetPassword: async ({\r\n        token,\r\n        oldPassword,\r\n        password,\r\n      }: {\r\n        token: string;\r\n        oldPassword?: string;\r\n        password: string;\r\n      }) => {\r\n        const { data } = await apolloClient.query({\r\n          query: RESET_PASSWORD_QUERY,\r\n          variables: {\r\n            input: { token, password, oldPassword: oldPassword || \"\" },\r\n          },\r\n        });\r\n        if (isSuccess(\"resetPassword\", data)) {\r\n          return data.resetPassword.data;\r\n        }\r\n      },\r\n      isPasswordResetTokenValid: async ({ token }: { token: string }) => {\r\n        const { data } = await apolloClient.query({\r\n          query: PASSWORD_RESET_TOKEN_VALID_QUERY,\r\n          variables: { input: { token } },\r\n        });\r\n        if (isSuccess(\"passwordResetTokenValid\", data)) {\r\n          return data.passwordResetTokenValid.data;\r\n        }\r\n      },\r\n\r\n      signup: async (formValues: any) => {\r\n        const { data } = await userSignup({\r\n          variables: { input: formValues },\r\n        });\r\n\r\n        if (isSuccess(\"signup\", data)) {\r\n          await authActions.login({\r\n            username: formValues.email,\r\n            password: formValues.password,\r\n            rememberMe:true\r\n          });\r\n        }\r\n      },\r\n      vendorSignup: async (formValues: any) => {\r\n        const { data } = await userVendorSignup({\r\n          variables: { input: formValues },\r\n        });\r\n\r\n        if (isSuccess(\"vendorSignup\", data)) {\r\n          await authActions.login({\r\n            username: formValues.email,\r\n            password: formValues.password,\r\n            rememberMe:true\r\n          });\r\n        }\r\n      },\r\n\r\n      refreshToken: async (accessToken: string) => {\r\n        const { data } = await apolloClient.query({\r\n          query: REFRESH_TOKEN_QUERY,\r\n          variables: { input: { accessToken } },\r\n        });\r\n        if (isSuccess(\"refreshToken\", data)) {\r\n          await doLogin(data.refreshToken.data);\r\n        } else {\r\n          authActions.logout();\r\n        }\r\n      },\r\n\r\n      logout: async () => {\r\n        await doLogout();\r\n      },\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [state]\r\n  );\r\n\r\n  let authChildren = children;\r\n  if (state.userType === \"LOGGED_IN\" && !state.accountProfile) {\r\n    authChildren = null;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        ...authActions,\r\n      }}\r\n    >\r\n      {authChildren}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth must be used within a AuthContext\");\r\n  }\r\n  return context;\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const ACCOUNT_PROFILE_QUERY = gql`\r\n  query ($input: AccountProfileRequest) {\r\n    getAccountProfile(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_VENDOR_PROFILE_QUERY = gql`\r\n  query ($input: VendorSearchCond) {\r\n    getVendorProfile(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGNUP_QUERY = gql`\r\n  mutation ($input: SignupRequest) {\r\n    signup(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VENDOR_SIGNUP_QUERY = gql`\r\n  mutation ($input: VendorSignupRequest) {\r\n    vendorSignup(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ACCOUNT_PROFILE_QUERY = gql`\r\nmutation ($input: UpdateAccountProfileRequest) {\r\n    updateAccountProfile(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DASHBOARD_OVERVIEW_QUERY = gql`\r\n  query ($input: DashboardOverviewCond) {\r\n    getDashboardOverview(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DASHBOARD_CHART_OVERVIEW_QUERY = gql`\r\n  query ($input: DashboardChartOverviewCond) {\r\n    getDashboardChartOverview(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USERS_QUERY = gql`\r\n  query ($input: UsersCond) {\r\n    getUsers(input: $input) {\r\n      responseCode\r\n      data\r\n      dataCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ORG_VENDORS_QUERY = gql`\r\n  query ($input: OrgVendorsCond) {\r\n    getOrgVendors(input: $input) {\r\n      responseCode\r\n      data\r\n      dataCount\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n// Mutation\r\nexport const CREATE_USER_MUTATION = gql`\r\n  mutation ($input: UserFormRequest) {\r\n    createUser(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ORG_VENDOR_MUTATION = gql`\r\n  mutation ($input: OrgVendorFormRequest) {\r\n    createOrgVendor(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_USER_MUTATION = gql`\r\n  mutation ($input: UserFormRequest) {\r\n    updateUser(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_USER_PROFILE_MUTATION = gql`\r\n  mutation ($input: UserProfileFormRequest) {\r\n    updateProfile(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_VENDOR_PROFILE_MUTATION = gql`\r\n  mutation ($input: VendorProfileFormRequest) {\r\n    updateVendorProfile(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_USER_MUTATION = gql`\r\n  mutation ($input: UserDeleteRequest) {\r\n    deleteUser(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_ORG_VENDOR_MUTATION = gql`\r\n  mutation ($input: OrgVendorDeleteRequest) {\r\n    deleteOrgVendor(input: $input) {\r\n      responseCode\r\n      data\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}