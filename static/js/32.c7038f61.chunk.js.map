{"version":3,"sources":["helpers/useForm.ts","helpers/validateRules.ts","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/InputGroup.js","containers/Users/UserForm.tsx"],"names":["thisError","useForm","initialValues","callback","validate","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleSubmit","useCallback","e","preventDefault","undefined","handleCurrentVal","obj","resetForm","setUpdateValue","field","value","handleChange","persist","target","name","handleNumberChange","isNaN","handleKeyPress","test","thisName","thisValue","handleDateChange","date","Date","getTime","handleSelectChange","handleRadioChange","handleMultiSelectChange","itemIds","forEach","item","push","handleCheckboxChange","handleFileChange","files","handleSelectDefault","addMethod","mixed","msg","parseInt","WEBSITE_URL","EXT_TYPE","handleErrorMeg","schema","validateSync","abortEarly","error","inner","reduce","path","loginValidate","loginSchema","object","shape","username","string","required","password","forgotPasswordValidate","forgotPasswordSchema","email","resetPasswordValidate","resetPasswordSchema","matches","confirmPassword","oneOf","ref","adminResetPasswordValidate","adminResetPasswordSchema","oldPassword","newPassword","orgVendorValidate","orgVendorSchema","signupValidate","signupSchema","firstName","lastName","organizationName","organizationType","natureOfBusiness","companyRegistrationNo","phoneNumber","phone","vendorSignupValidate","vendorSignupSchema","companyName","legalStatus","businessName","businessRegistrationNo","businessRegistrationAddress","city","pincode","fax","website","this","parent","formType","commBusinessRegistrationAddress","commCity","commPincode","commPhoneNumber","commFax","commEmail","commWebsite","commWorkingDays","commWorkingHours","bnkBankName","bnkCustomerName","bnkAccountNo","bnkAccountType","bnkIfscCode","bnkBranchAddress","bnkBranchCode","panNo","gstn","lutDate","lutNo","proprietorName","proprietorPosition","proprietorMobile","proprietorPhone","proprietorEmail","repName","repDesignation","repMobile","repPhone","repEmail","repWorkingDays","repWorkingHours","repWorkingHoursAm","repWorkingHoursPm","finRepName","finRepDesignation","finRepMobile","finRepPhone","finRepEmail","finRepWorkingDays","finRepWorkingHours","finRepWorkingHoursAm","finRepWorkingHoursPm","relManagerName","relManagerDesignation","relManagerMobile","relManagerPhone","relManagerEmail","relManagerWorkingDays","relManagerWorkingHours","relManagerWorkingHoursAm","relManagerWorkingHoursPm","businnessRegFileAttachment","validateFileExt","pancardFileAttachment","cancelledChequeFileAttachment","gstFileAttachment","msmeFileAttachment","tdsFileAttachment","userValidate","userSchema","userAccessType","id","orgItemValidate","orgItemSchema","itemName","itemCode","profileValidate","profileSchema","rfqFormValidate","rfqFormSchema","hsnCode","unspscCode","isProposalDoc","proposalDocAttachment","quantity","description","purchaseRequestNumber","bidType","bidStartDate","bidEndDate","vendorIds","array","min","address1","state","rfqBiddingDetailsValidate","rfqBiddingDetailsSchema","biddingQuantity","biddingUnitPrice","biddingDescription","contentType","biddingProposalDocAttachment","comparisonValidate","comparisonSchema","vendorName","buyerCompareType","vendorCompareType","buyerFileAttachment","vendorFileAttachment","buyerDescription","vendorDescription","_excluded","propTypes","tag","tagPropType","className","PropTypes","cssModule","innerRef","oneOfType","func","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","children","node","row","bool","check","inline","disabled","FormGroup","size","InputGroup","orgId","UserForm","inputResponse","setIsLoading","formAction","UpdateUser","CreateUser","accountProfile","then","res","closeModal","catch","err","setGlobalErrMsg","strings","errorCode","isLoading","globalErrMsg","useModal","isModal","modalData","userService","useLocalization","useAuth","keyName","isOpen","modalClassName","style","color","role","onSubmit","placeholder","type","onChange","autoComplete","onClick"],"mappings":"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","file":"static/js/32.c7038f61.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nlet thisError: any = {}\r\ninterface setSTateType {\r\n  [name: string]: any;\r\n}\r\n\r\nconst useForm = (initialValues:setSTateType = {}, callback: Function, validate: any) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState(thisError);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) callback();\r\n    // eslint-disable-next-line\r\n  }, [errors]);\r\n\r\n  const handleSubmit = useCallback(e => {\r\n    if (e) e.preventDefault();\r\n    setErrors(false);\r\n    if (validate === undefined) setErrors({});\r\n    if (validate === null) setErrors({});\r\n    if (validate !== undefined && validate) setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n    // eslint-disable-next-line\r\n  }, [values]);\r\n\r\n  const handleCurrentVal = (obj: any) => {\r\n    setValues(obj);\r\n  };\r\n\r\n  const resetForm = useCallback(() => {\r\n    setIsSubmitting(false);\r\n    setErrors({});\r\n    setValues(initialValues);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const setUpdateValue = useCallback((field, value) => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  }, []);\r\n\r\n  const handleChange = useCallback(e => {\r\n    e.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  }, []);\r\n\r\n  const handleNumberChange = useCallback(e => {\r\n    e.persist();\r\n    if(isNaN(e.target.value)) return;\r\n    setValues(values => ({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  }, []);\r\n\r\n  const handleKeyPress = useCallback(\r\n    e => {\r\n      if (!/^\\d{1,10}(\\.\\d{0,4})?$/.test(e.target.value)) {\r\n        e.persist();\r\n        return null;\r\n      }\r\n      let thisName = e.target.name;\r\n      let thisValue = e.target.value;\r\n      setValues(values => ({\r\n        ...values,\r\n        [thisName]: thisValue\r\n      }));\r\n      // eslint-disable-next-line\r\n    },\r\n    // eslint-disable-next-line\r\n    [values]\r\n  );\r\n\r\n  const handleDateChange = useCallback((date, name = \"date\") => {\r\n    date = new Date(date);\r\n    let value = date.getTime();\r\n    setValues(values => ({\r\n      ...values,\r\n      [name]: value\r\n    }));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSelectChange = useCallback((e, name = \"select\") => {\r\n    let value = e ? e.value : null;\r\n    setValues(values => ({\r\n      ...values,\r\n      [name]: value\r\n    }));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleRadioChange = useCallback(e => {\r\n    let value = e.target.value;\r\n    let name = e.target.name;\r\n    setValues(values => ({\r\n      ...values,\r\n      [name]: value\r\n    }));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleMultiSelectChange = useCallback((e, name = \"mselect\") => {\r\n    let itemIds:any[] = [];\r\n    if (e !== null && e.length > 0) {\r\n      e.forEach((item: any) => {\r\n        itemIds.push(item.value);\r\n      });\r\n    }\r\n\r\n    setValues(values => ({\r\n      ...values,\r\n      [name]: itemIds,\r\n      [name + \"Label\"]: e\r\n    }));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleCheckboxChange = useCallback((value, name = \"checkbox\") => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [name]: value\r\n    }));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleFileChange = useCallback(e => {\r\n    e.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [e.target.name]: e.target.files[0]\r\n    }));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSelectDefault = useCallback((e, name = \"select\") => {\r\n    let value = e ? e.target.value : null;\r\n    setValues(values => ({\r\n      ...values,\r\n      [name]: value\r\n    }));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return {\r\n    handleChange,\r\n    handleNumberChange,\r\n    handleDateChange,\r\n    handleSelectChange,\r\n    handleKeyPress,\r\n    handleMultiSelectChange,\r\n    handleSubmit,\r\n    values,\r\n    setUpdateValue,\r\n    errors,\r\n    resetForm,\r\n    handleCurrentVal,\r\n    handleCheckboxChange,\r\n    handleFileChange,\r\n    handleRadioChange,\r\n    handleSelectDefault\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import { object, string, mixed, addMethod, ref, array } from \"yup\";\r\nimport { validateFileExt } from \"utils/CommonUtils\";\r\n\r\naddMethod(mixed, \"isDateValid\", isDateValid);\r\n\r\nconst WEBSITE_URL =\r\n  /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\nconst EXT_TYPE = [\"doc\", \"docx\", \"pdf\", \"xlsx\", \"csv\", \"msg\", \"jpeg\"];\r\n\r\nfunction getErrorsFromValidationError(validationError: any) {\r\n  const FIRST_ERROR = 0;\r\n  return validationError.inner.reduce((errors: any, error: any) => {\r\n    return {\r\n      ...errors,\r\n      [error.path]: error.errors[FIRST_ERROR],\r\n    };\r\n  }, {});\r\n}\r\n\r\nfunction handleErrorMeg(msg: string, schema: any) {\r\n  try {\r\n    schema.validateSync(msg, { abortEarly: false });\r\n    return {};\r\n  } catch (error) {\r\n    return getErrorsFromValidationError(error);\r\n  }\r\n}\r\n\r\nfunction isDateValid(msg: string) {\r\n  return mixed().test(\"isDateValid\", msg, function (value) {\r\n    value = parseInt(value, 10);\r\n    if (!value || isNaN(value)) return false;\r\n    var isValid = new Date(value).getTime() > 0;\r\n    return isValid;\r\n  });\r\n}\r\n\r\n// Validation section\r\n\r\n// Login Validation\r\nexport function loginValidate(values: any) {\r\n  return handleErrorMeg(values, loginSchema);\r\n}\r\n\r\nconst loginSchema = object().shape({\r\n  username: string().required(\"error.username_empty\"),\r\n  password: string().required(\"error.password_empty\"),\r\n});\r\n\r\n// Forgot Password Validation\r\nexport function forgotPasswordValidate(values: any) {\r\n  return handleErrorMeg(values, forgotPasswordSchema);\r\n}\r\n\r\nconst forgotPasswordSchema = object().shape({\r\n  email: string().email(\"Invalid Email\").required(\"Email cannot be empty\"),\r\n});\r\n\r\n// Reset Password Validation\r\nexport function resetPasswordValidate(values: any) {\r\n  return handleErrorMeg(values, resetPasswordSchema);\r\n}\r\n\r\nconst resetPasswordSchema = object().shape({\r\n  password: string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\r\n      \"Password format incorrect\"\r\n    )\r\n    .required(\"Password cannot be empty\"),\r\n  confirmPassword: string()\r\n    .required(\"Confirm Password cannot be empty\")\r\n    .oneOf([ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\n// Admin Reset Password Validation\r\nexport function adminResetPasswordValidate(values: any) {\r\n  return handleErrorMeg(values, adminResetPasswordSchema);\r\n}\r\n\r\nconst adminResetPasswordSchema = object().shape({\r\n  oldPassword: string().required(\"Password cannot be empty\"),\r\n  newPassword: string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\r\n      \"Password format not match\"\r\n    )\r\n    .required(\"New Password cannot be empty\"),\r\n  confirmPassword: string()\r\n    .required(\"Confirm Password cannot be empty\")\r\n    .oneOf([ref(\"newPassword\"), null], \"Passwords must match\"),\r\n});\r\n\r\n// Org Vendor Validation\r\nexport function orgVendorValidate(values: any) {\r\n  return handleErrorMeg(values, orgVendorSchema);\r\n}\r\n\r\nconst orgVendorSchema = object().shape({\r\n  email: string().email(\"Invalid email\").required(\"Email cannot be empty\"),\r\n});\r\n\r\n// Signup Validation\r\nexport function signupValidate(values: any) {\r\n  return handleErrorMeg(values, signupSchema);\r\n}\r\n\r\nconst signupSchema = object().shape({\r\n  firstName: string().required(\"First name cannot be empty\"),\r\n  lastName: string().required(\"Last name cannot be empty\"),\r\n  email: string().email(\"Invalid email\").required(\"Email cannot be empty\"),\r\n  organizationName: string().required(\"Organization name cannot be empty\"),\r\n  organizationType: string().required(\"Organization type cannot be empty\"),\r\n  natureOfBusiness: string().required(\"Nature of business cannot be empty\"),\r\n  companyRegistrationNo: string().required(\r\n    \"Company registration no cannot be empty\"\r\n  ),\r\n  phoneNumber: string()\r\n    .test(\r\n      \"isValidPhoneNumber1\",\r\n      \"Phone number invalid\",\r\n      (phone?: string | null) => {\r\n        const numberRegExp = /^\\d*$/;\r\n        return phone && phone.length > 6 && numberRegExp.test(phone)\r\n          ? true\r\n          : false;\r\n      }\r\n    )\r\n    .required(\"Phone number cannot be empty\"),\r\n  password: string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\r\n      \"Password format incorrect\"\r\n    )\r\n    .required(\"Password cannot be empty\"),\r\n});\r\n\r\n// Vendor Signup Validation\r\n\r\nexport function vendorSignupValidate(values: any) {\r\n  return handleErrorMeg(values, vendorSignupSchema);\r\n}\r\n\r\nconst vendorSignupSchema = object().shape({\r\n  companyName: string().required(\"Company name cannot be empty\"),\r\n  legalStatus: string().required(\"Legal status cannot be empty\"),\r\n  businessName: string().required(\"Business name cannot be empty\"),\r\n  businessRegistrationNo: string().required(\r\n    \"Business registration no cannot be empty\"\r\n  ),\r\n  businessRegistrationAddress: string().required(\r\n    \"Business registration address cannot be empty\"\r\n  ),\r\n  city: string().required(\"City cannot be empty\"),\r\n  pincode: string().required(\"Pincode cannot be empty\"),\r\n  fax: string().required(\"fax cannot be empty\"),\r\n  website: string()\r\n    .matches(WEBSITE_URL, \"Enter a valid url\")\r\n    .required(\"website cannot be empty\"),\r\n  email: string().email(\"Invalid email\").required(\"Email cannot be empty\"),\r\n  phoneNumber: string()\r\n    .test(\r\n      \"isValidPhoneNumber1\",\r\n      \"Phone number invalid\",\r\n      (phone?: string | null) => {\r\n        const numberRegExp = /^\\d*$/;\r\n        return phone && phone.length > 6 && numberRegExp.test(phone)\r\n          ? true\r\n          : false;\r\n      }\r\n    )\r\n    .required(\"Phone number cannot be empty\"),\r\n  password: string()\r\n    .test(\r\n      \"passwordFormatValid\",\r\n      \"Password format incorrect\",\r\n      function (value?: string | null) {\r\n        const numberRegExp =\r\n          /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n        if (this.parent.formType === \"profile\") {\r\n          return true;\r\n        } else if (value && numberRegExp.test(value)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    )\r\n    .test(\"isValidpassword\", \"Password cannot be empty\", function (value) {\r\n      return value !== \"\" || this.parent.formType === \"profile\" ? true : false;\r\n    }),\r\n  commBusinessRegistrationAddress: string().required(\r\n    \"Business registration address cannot be empty\"\r\n  ),\r\n  commCity: string().required(\"City cannot be empty\"),\r\n  commPincode: string().required(\"Pincode cannot be empty\"),\r\n  commPhoneNumber: string()\r\n    .test(\r\n      \"isValidPhoneNumber1\",\r\n      \"Phone number invalid\",\r\n      (phone?: string | null) => {\r\n        const numberRegExp = /^\\d*$/;\r\n        return phone && phone.length > 6 && numberRegExp.test(phone)\r\n          ? true\r\n          : false;\r\n      }\r\n    )\r\n    .required(\"Phone number cannot be empty\"),\r\n  commFax: string().required(\"FAX cannot be empty\"),\r\n  commEmail: string().email(\"Invalid email\").required(\"Email cannot be empty\"),\r\n  commWebsite: string()\r\n    .matches(WEBSITE_URL, \"Enter a valid url\")\r\n    .required(\"Website cannot be empty\"),\r\n  commWorkingDays: string().required(\"Working days cannot be empty\"),\r\n  commWorkingHours: string().required(\"Working hours cannot be empty\"),\r\n\r\n  bnkBankName: string().required(\"Bank name cannot be empty\"),\r\n  bnkCustomerName: string().required(\"Customer name cannot be empty\"),\r\n  bnkAccountNo: string().required(\"Account no cannot be empty\"),\r\n  bnkAccountType: string().required(\"Account type cannot be empty\"),\r\n  bnkIfscCode: string().required(\"IFSC cannot be empty\"),\r\n  bnkBranchAddress: string().required(\"Branch address cannot be empty\"),\r\n  bnkBranchCode: string().required(\"Branch code cannot be empty\"),\r\n\r\n  panNo: string().required(\"PAN no cannot be empty\"),\r\n  gstn: string().required(\"GSTN cannot be empty\"),\r\n  lutDate: string().required(\"LUT date cannot be empty\"),\r\n  lutNo: string().required(\"LUT no cannot be empty\"),\r\n\r\n  proprietorName: string().required(\"Name cannot be empty\"),\r\n  proprietorPosition: string().required(\"Position cannot be empty\"),\r\n  proprietorMobile: string().required(\"Mobile cannot be empty\"),\r\n  proprietorPhone: string().required(\"Phone cannot be empty\"),\r\n  proprietorEmail: string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email cannot be empty\"),\r\n\r\n  repName: string().required(\"Name cannot be empty\"),\r\n  repDesignation: string().required(\"Designation cannot be empty\"),\r\n  repMobile: string().required(\"Mobile cannot be empty\"),\r\n  repPhone: string().required(\"Phone cannot be empty\"),\r\n  repEmail: string().email(\"Invalid email\").required(\"Email cannot be empty\"),\r\n  repWorkingDays: string().required(\"Working days cannot be empty\"),\r\n  repWorkingHours: string().required(\"Working hours cannot be empty\"),\r\n  repWorkingHoursAm: string().required(\"Working AM cannot be empty\"),\r\n  repWorkingHoursPm: string().required(\"Working PM cannot be empty\"),\r\n\r\n  finRepName: string().required(\"Name cannot be empty\"),\r\n  finRepDesignation: string().required(\"Designation cannot be empty\"),\r\n  finRepMobile: string().required(\"Mobile cannot be empty\"),\r\n  finRepPhone: string().required(\"Phone cannot be empty\"),\r\n  finRepEmail: string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email cannot be empty\"),\r\n  finRepWorkingDays: string().required(\"Working days cannot be empty\"),\r\n  finRepWorkingHours: string().required(\"Working hours cannot be empty\"),\r\n  finRepWorkingHoursAm: string().required(\"Working AM cannot be empty\"),\r\n  finRepWorkingHoursPm: string().required(\"Working PM cannot be empty\"),\r\n\r\n  relManagerName: string().required(\"Name cannot be empty\"),\r\n  relManagerDesignation: string().required(\"Designation cannot be empty\"),\r\n  relManagerMobile: string().required(\"Mobile cannot be empty\"),\r\n  relManagerPhone: string().required(\"Phone cannot be empty\"),\r\n  relManagerEmail: string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email cannot be empty\"),\r\n  relManagerWorkingDays: string().required(\"Working days cannot be empty\"),\r\n  relManagerWorkingHours: string().required(\"Working hours cannot be empty\"),\r\n  relManagerWorkingHoursAm: string().required(\"Working AM cannot be empty\"),\r\n  relManagerWorkingHoursPm: string().required(\"Working PM cannot be empty\"),\r\n  businnessRegFileAttachment: mixed()\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      if (this.parent.formType === \"profile\") return true;\r\n      return value.length > 0 ? true : false;\r\n    })\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (\r\n        value.length > 0 &&\r\n        validateFileExt(value[0].name, [\r\n          \"jpeg\",\r\n          \"jpg\",\r\n          \"png\",\r\n          \"doc\",\r\n          \"docx\",\r\n          \"pdf\",\r\n          \"xlsx\",\r\n          \"msg\",\r\n          \"csv\",\r\n          \"txt\",\r\n        ])\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }),\r\n  pancardFileAttachment: mixed()\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      if (this.parent.formType === \"profile\") return true;\r\n      return value.length > 0 ? true : false;\r\n    })\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (\r\n        value.length > 0 &&\r\n        validateFileExt(value[0].name, [\r\n          \"jpeg\",\r\n          \"jpg\",\r\n          \"png\",\r\n          \"doc\",\r\n          \"docx\",\r\n          \"pdf\",\r\n          \"xlsx\",\r\n          \"msg\",\r\n          \"csv\",\r\n          \"txt\",\r\n        ])\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }),\r\n  cancelledChequeFileAttachment: mixed()\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      if (this.parent.formType === \"profile\") return true;\r\n      return value.length > 0 ? true : false;\r\n    })\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (\r\n        value.length > 0 &&\r\n        validateFileExt(value[0].name, [\r\n          \"jpeg\",\r\n          \"jpg\",\r\n          \"png\",\r\n          \"doc\",\r\n          \"docx\",\r\n          \"pdf\",\r\n          \"xlsx\",\r\n          \"msg\",\r\n          \"csv\",\r\n          \"txt\",\r\n        ])\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }),\r\n  gstFileAttachment: mixed()\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      if (this.parent.formType === \"profile\") return true;\r\n      return value.length > 0 ? true : false;\r\n    })\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (\r\n        value.length > 0 &&\r\n        validateFileExt(value[0].name, [\r\n          \"jpeg\",\r\n          \"jpg\",\r\n          \"png\",\r\n          \"doc\",\r\n          \"docx\",\r\n          \"pdf\",\r\n          \"xlsx\",\r\n          \"msg\",\r\n          \"csv\",\r\n          \"txt\",\r\n        ])\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }),\r\n  msmeFileAttachment: mixed().test(\r\n    \"fileUploadFormatValidate\",\r\n    \"Invalid file\",\r\n    function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (\r\n        value.length > 0 &&\r\n        validateFileExt(value[0].name, [\r\n          \"jpeg\",\r\n          \"jpg\",\r\n          \"png\",\r\n          \"doc\",\r\n          \"docx\",\r\n          \"pdf\",\r\n          \"xlsx\",\r\n          \"msg\",\r\n          \"csv\",\r\n          \"txt\",\r\n        ])\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  ),\r\n  tdsFileAttachment: mixed().test(\r\n    \"fileUploadFormatValidate\",\r\n    \"Invalid file\",\r\n    function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (\r\n        value.length > 0 &&\r\n        validateFileExt(value[0].name, [\r\n          \"jpeg\",\r\n          \"jpg\",\r\n          \"png\",\r\n          \"doc\",\r\n          \"docx\",\r\n          \"pdf\",\r\n          \"xlsx\",\r\n          \"msg\",\r\n          \"csv\",\r\n          \"txt\",\r\n        ])\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  ),\r\n});\r\n\r\n// Users Validation\r\nexport function userValidate(values: any) {\r\n  return handleErrorMeg(values, userSchema);\r\n}\r\n\r\nconst userSchema = object().shape({\r\n  firstName: string().required(\"First name cannot be empty\"),\r\n  lastName: string().required(\"Last name cannot be empty\"),\r\n  email: string().email(\"Invalid email\").required(\"Email cannot be empty\"),\r\n  userAccessType: string().required(\"Role cannot be empty\"),\r\n  phoneNumber: string()\r\n    .test(\r\n      \"isValidPhoneNumber1\",\r\n      \"Phone number invalid\",\r\n      (phone?: string | null) => {\r\n        const numberRegExp = /^\\d*$/;\r\n        return phone && phone.length > 6 && numberRegExp.test(phone)\r\n          ? true\r\n          : false;\r\n      }\r\n    )\r\n    .required(\"Phone number cannot be empty\"),\r\n  password: string()\r\n    .test(\r\n      \"passwordformatValidate\",\r\n      \"Password format incorrect\",\r\n      function (password) {\r\n        const passwordRegExp =\r\n          /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n        if (!password) return true;\r\n        return passwordRegExp.test(password) ? true : false;\r\n      }\r\n    )\r\n    .test(\"passwordValidate\", \"Password cannot be empty\", function (password) {\r\n      return this.parent.id || password !== \"\" ? true : false;\r\n    }),\r\n});\r\n\r\n// OrgItem Validation\r\nexport function orgItemValidate(values: any) {\r\n  return handleErrorMeg(values, orgItemSchema);\r\n}\r\n\r\nconst orgItemSchema = object().shape({\r\n  itemName: string().required(\"Item name cannot be empty\"),\r\n  itemCode: string().required(\"Item code cannot be empty\"),\r\n});\r\n\r\n// Profile Validation\r\nexport function profileValidate(values: any) {\r\n  return handleErrorMeg(values, profileSchema);\r\n}\r\n\r\nconst profileSchema = object().shape({\r\n  firstName: string().required(\"First name cannot be empty\"),\r\n  lastName: string().required(\"Last name cannot be empty\"),\r\n  email: string().email(\"Invalid email\").required(\"Email cannot be empty\"),\r\n  phoneNumber: string()\r\n    .test(\r\n      \"isValidPhoneNumber1\",\r\n      \"Phone number invalid\",\r\n      (phone?: string | null) => {\r\n        const numberRegExp = /^\\d*$/;\r\n        return phone && phone.length > 6 && numberRegExp.test(phone)\r\n          ? true\r\n          : false;\r\n      }\r\n    )\r\n    .required(\"Phone number cannot be empty\"),\r\n});\r\n\r\n// RFQ Validation\r\nexport function rfqFormValidate(values: any) {\r\n  return handleErrorMeg(values, rfqFormSchema);\r\n}\r\n\r\nconst rfqFormSchema = object().shape({\r\n  itemName: string().required(\"Item name cannot be empty\"),\r\n  itemCode: string().required(\"Item code cannot be empty\"),\r\n  hsnCode: string().required(\"HSN code cannot be empty\"),\r\n  unspscCode: string().required(\"UNSPSC code cannot be empty\"),\r\n  isProposalDoc: string().required(\"Doc Type cannot be empty\"),\r\n\r\n  proposalDocAttachment: mixed()\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      if (this.parent.isProposalDoc === \"no\") return true;\r\n\r\n      return value.length > 0 ? true : false;\r\n    })\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (value.length > 0 && validateFileExt(value[0].name, EXT_TYPE)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }),\r\n  quantity: string().test(\r\n    \"quantityValidate\",\r\n    \"Quantity cannot be empty\",\r\n    function (value) {\r\n      return this.parent.isProposalDoc === \"yes\" ||\r\n        (this.parent.isProposalDoc === \"no\" && value !== \"\")\r\n        ? true\r\n        : false;\r\n    }\r\n  ),\r\n  description: string().test(\r\n    \"descriptionValidate\",\r\n    \"Description cannot be empty\",\r\n    function (value) {\r\n      return this.parent.isProposalDoc === \"yes\" ||\r\n        (this.parent.isProposalDoc === \"no\" && value !== \"\")\r\n        ? true\r\n        : false;\r\n    }\r\n  ),\r\n  purchaseRequestNumber: string().required(\r\n    \"Purchase request number cannot be empty\"\r\n  ),\r\n  bidType: string().required(\"Bid Type cannot be empty\"),\r\n  bidStartDate: string().required(\"Bid start date cannot be empty\"),\r\n  bidEndDate: string().required(\"Bid end date cannot be empty\"),\r\n  vendorIds: array().min(1, \"Vendor cannot be empty\"),\r\n\r\n  address1: string().required(\"Address cannot be empty\"),\r\n  city: string().required(\"City cannot be empty\"),\r\n  pincode: string().required(\"Pin Code cannot be empty\"),\r\n  state: string().required(\"State cannot be empty\"),\r\n  fax: string().required(\"FAX cannot be empty\"),\r\n  phoneNumber: string().required(\"Mobile number cannot be empty\"),\r\n});\r\n\r\n// RFQ Bidding Details Validation\r\nexport function rfqBiddingDetailsValidate(values: any) {\r\n  return handleErrorMeg(values, rfqBiddingDetailsSchema);\r\n}\r\n\r\nconst rfqBiddingDetailsSchema = object().shape({\r\n  biddingQuantity: string().required(\"Quantity cannot be empty\"),\r\n  biddingUnitPrice: string().required(\"Unit price cannot be empty\"),\r\n  biddingDescription: string().test(\r\n    \"descValidate\",\r\n    \"Description canot be empty\",\r\n    function (value) {\r\n      return value !== \"\" || this.parent.contentType === \"fileupload\"\r\n        ? true\r\n        : false;\r\n    }\r\n  ),\r\n  biddingProposalDocAttachment: mixed()\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      return this.parent.bidType === \"open\" ||\r\n        value !== \"\" ||\r\n        this.parent.contentType === \"description\"\r\n        ? true\r\n        : false;\r\n    })\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (this.parent.contentType === \"description\") {\r\n        return true;\r\n      } else if (value.length === 0) {\r\n        return false;\r\n      } else if (\r\n        value.length > 0 &&\r\n        validateFileExt(value[0].name, [\r\n          \"jpeg\",\r\n          \"jpg\",\r\n          \"png\",\r\n          \"doc\",\r\n          \"docx\",\r\n          \"pdf\",\r\n          \"xlsx\",\r\n          \"msg\",\r\n          \"csv\",\r\n          \"txt\",\r\n        ])\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }),\r\n});\r\n\r\n// Comparison Validation\r\nexport function comparisonValidate(values: any) {\r\n  return handleErrorMeg(values, comparisonSchema);\r\n}\r\n\r\nconst comparisonSchema = object().shape({\r\n  vendorName: string().required(\"Vendor name cannot be empty\"),\r\n  buyerCompareType: string().required(\"Choose type cannot be empty\"),\r\n  vendorCompareType: string().required(\"Choose type cannot be empty\"),\r\n  buyerFileAttachment: mixed()\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (value.length > 0 && validateFileExt(value[0].name, EXT_TYPE)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    })\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      return this.parent.buyerCompareType === \"description\" || value.length > 0\r\n        ? true\r\n        : false;\r\n    }),\r\n  vendorFileAttachment: mixed()\r\n    .test(\"fileUploadFormatValidate\", \"Invalid file\", function (value) {\r\n      if (value.length === 0) {\r\n        return true;\r\n      } else if (value.length > 0 && validateFileExt(value[0].name, EXT_TYPE)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    })\r\n    .test(\"fileUploadValidate\", \"Upload file canot be empty\", function (value) {\r\n      return this.parent.vendorCompareType === \"description\" || value.length > 0\r\n        ? true\r\n        : false;\r\n    }),\r\n  buyerDescription: array().test(\r\n    \"descriptionValidate\",\r\n    \"Description cannot be empty\",\r\n    function (value) {\r\n      return this.parent.buyerCompareType === \"fileupload\" ||\r\n        (value && value.length > 0)\r\n        ? true\r\n        : false;\r\n    }\r\n  ),\r\n  vendorDescription: array().test(\r\n    \"descriptionValidate\",\r\n    \"Description cannot be empty\",\r\n    function (value) {\r\n      return this.parent.vendorCompareType === \"fileupload\" ||\r\n        (value && value.length > 0)\r\n        ? true\r\n        : false;\r\n    }\r\n  ),\r\n});\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"size\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Spinner,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport useForm from \"helpers/useForm\";\r\nimport { userValidate } from \"helpers/validateRules\";\r\nimport { StringMap } from \"helpers/interfaces\";\r\nimport { useModal } from \"contexts/ModalContextProvider\";\r\nimport userService from \"services/userService\";\r\nimport { errorCode } from \"utils/ServiceAPIUtil\";\r\nimport { useLocalization } from \"contexts/LocalizationContextProvider\";\r\nimport { useAuth } from \"contexts/AuthContextProvider\";\r\n\r\nconst initialValues: StringMap = {\r\n  id: null,\r\n  orgId: null,\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  phoneNumber: \"\",\r\n  userAccessType: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst UserForm = (props: any) => {\r\n  const { inputResponse } = props;\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n    setUpdateValue,\r\n    handleSelectDefault,\r\n  } = useForm(initialValues, handleSubmitCB, userValidate);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [globalErrMsg, setGlobalErrMsg] = useState(\"\");\r\n  const { isModal, closeModal, modalData }: any = useModal();\r\n  const { CreateUser, UpdateUser } = userService();\r\n  const { strings }: any = useLocalization();\r\n  const { accountProfile } = useAuth();\r\n\r\n  function handleSubmitCB() {\r\n    setIsLoading(true);\r\n    const formAction = values.id ? UpdateUser : CreateUser;\r\n    if (accountProfile) {\r\n      formAction({\r\n        id: values.id,\r\n        orgId: accountProfile.id,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        email: values.email,\r\n        phoneNumber: values.phoneNumber,\r\n        userAccessType: values.userAccessType,\r\n        password: values.password,\r\n      })\r\n        .then((res) => {\r\n          inputResponse(values.id ? \"update\" : \"add\");\r\n          closeModal();\r\n        })\r\n        .catch((err) => {\r\n          setGlobalErrMsg(\r\n            strings[\"error.\" + errorCode(err)] || strings[\"error.e10100\"]\r\n          );\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setGlobalErrMsg(\"Organization not found\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (modalData) {\r\n      Object.keys(initialValues).forEach((keyName) => {\r\n        setUpdateValue(keyName, modalData[keyName] || initialValues[keyName]);\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [modalData]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        className=\"modal-dialog custom-modal\"\r\n        isOpen={isModal}\r\n        modalClassName=\"right\"\r\n      >\r\n        <div className=\"modal-body p-0\">\r\n          <Card className=\"bg-secondary border-0 mb-0\">\r\n            <CardHeader className=\"bg-transparent\">\r\n              <div className=\"text-center mt-2\">\r\n                {values.id ? \"Update User\" : \"Add User\"}\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody className=\"px-lg-5 py-lg-5\">\r\n              {globalErrMsg !== \"\" && (\r\n                <div\r\n                  className=\"text-center mb-3 error\"\r\n                  style={{ color: \"#B94A48\" }}\r\n                >\r\n                  {globalErrMsg}\r\n                </div>\r\n              )}\r\n              <Form role=\"form\" onSubmit={handleSubmit}>\r\n                <FormGroup className=\"mb-3 focused\">\r\n                  <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                    <Input\r\n                      placeholder=\"First Name\"\r\n                      value={values.firstName}\r\n                      type=\"text\"\r\n                      onChange={handleChange}\r\n                      name=\"firstName\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.firstName && (\r\n                    <span className=\"error\">{errors.firstName}</span>\r\n                  )}\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-3 focused\">\r\n                  <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                    <Input\r\n                      placeholder=\"Last Name\"\r\n                      value={values.lastName}\r\n                      type=\"text\"\r\n                      onChange={handleChange}\r\n                      name=\"lastName\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.lastName && (\r\n                    <span className=\"error\">{errors.lastName}</span>\r\n                  )}\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-3 focused\">\r\n                  <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                    <Input\r\n                      placeholder=\"Email\"\r\n                      value={values.email}\r\n                      type=\"text\"\r\n                      onChange={handleChange}\r\n                      name=\"email\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.email && (\r\n                    <span className=\"error\">{errors.email}</span>\r\n                  )}\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-3 focused\">\r\n                  <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                    <Input\r\n                      placeholder=\"Phone number\"\r\n                      value={values.phoneNumber}\r\n                      type=\"text\"\r\n                      onChange={handleChange}\r\n                      name=\"phoneNumber\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.phoneNumber && (\r\n                    <span className=\"error\">{errors.phoneNumber}</span>\r\n                  )}\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-3 focused\">\r\n                  <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                    <select\r\n                      className=\"form-control \"\r\n                      name=\"userAccessType\"\r\n                      value={values.userAccessType}\r\n                      onChange={(e) => handleSelectDefault(e, \"userAccessType\")}\r\n                    >\r\n                      <option value=\"\">Select User Type</option>\r\n                      <option value=\"buyer\">Buyer</option>\r\n                    </select>\r\n                  </InputGroup>\r\n                  {errors.userAccessType && (\r\n                    <span className=\"error\">{errors.userAccessType}</span>\r\n                  )}\r\n                </FormGroup>\r\n                {!values.id && (\r\n                  <FormGroup className=\"mb-3 focused\">\r\n                    <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                      <Input\r\n                        placeholder=\"Password\"\r\n                        value={values.password}\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        name=\"password\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </InputGroup>\r\n                    {errors.password && (\r\n                      <span className=\"error\">{errors.password}</span>\r\n                    )}\r\n                  </FormGroup>\r\n                )}\r\n                <div className=\"text-center\">\r\n                  <Button className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                    {isLoading ? <Spinner size=\"sm\" /> : \"Save\"}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"my-4\"\r\n                    color=\"secondary\"\r\n                    type=\"button\"\r\n                    onClick={() => closeModal()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"],"sourceRoot":""}