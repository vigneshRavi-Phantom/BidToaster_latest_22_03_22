{"version":3,"sources":["components/toaster/Alert.tsx","components/toaster/useTimeout.ts","components/toaster/Message.tsx","components/toaster/ToastManager.tsx","components/toaster/Toast.tsx","components/toaster/index.ts","pages/ForgotPassword.tsx"],"names":["Close","onClose","className","type","onClick","Alert","id","title","useTimeout","callback","delay","savedCallback","React","current","setTimeout","clearTimeout","Message","message","position","onRequestRemove","requestClose","duration","container","timeout","localShow","setLocalShow","isFromTop","close","animation","config","mass","tension","friction","from","opacity","height","transform","enter","next","getBoundingClientRect","leave","onRest","transition","useTransition","style","display","flexDirection","alignItems","includes","getStyle","onMouseEnter","onMouseLeave","props","item","div","pointerEvents","ref","defaultState","top","bottom","ToastManager","state","notify","options","toast","createToastState","isTop","setState","prev","closeAll","Object","keys","forEach","pos","p","closeToast","idCounter","hasOwnProperty","showing","removeToast","String","map","filter","maxWidth","zIndex","margin","textAlign","right","left","this","thisPosition","toasts","key","isBrowser","window","document","PORTAL_ID","Toaster","createNotification","removeAll","bindNotify","fn","portalElement","existingPortalElement","getElementById","el","createElement","body","appendChild","ReactDOM","toaster","initialValues","email","ForgotPassword","strings","useLocalization","useForm","setLoading","forgotPassword","values","then","res","emailExists","setUpdateValue","setGlobalErrMsg","catch","err","errorCode","forgotPasswordValidate","errors","handleChange","handleSubmit","useAuth","useState","loading","globalErrMsg","lead","lg","md","color","role","onSubmit","classnames","addonType","placeholder","value","onChange","name","autoComplete","size","xs","to"],"mappings":"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","file":"static/js/37.c4f48a51.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { MessageType } from \"./Message\";\n\ninterface Props {\n  id: string;\n  title: React.ReactNode | string;\n  onClose: () => void;\n  type?: MessageType;\n}\n\nconst Alert = ({ id, title, onClose, type }: Props) => {\n  return (\n    <div id={id} className=\"Toaster__alert\">\n      {typeof title === \"string\" ? (\n        <div className={`Toaster__alert_text ${type === 'error' ? 'danger' : type}`}>{title}</div>\n      ) : (\n        title\n      )}\n\n      {onClose && <Close onClose={onClose} />}\n    </div>\n  );\n};\n\nconst Close = ({ onClose }: { onClose: () => void }) => (\n  <button\n    className=\"Toaster__alert_close\"\n    type=\"button\"\n    aria-label=\"Close\"\n    onClick={onClose}\n  >\n    <span aria-hidden=\"true\">Ã—</span>\n  </button>\n);\n\nexport default Alert;","import * as React from \"react\";\n\ntype Callback = () => void;\n\nexport function useTimeout(callback: Callback, delay: number | null) {\n  const savedCallback = React.useRef<Callback | null>();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      if (savedCallback.current) {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      let id = setTimeout(tick, delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n}","import * as React from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport ReachAlert from \"@reach/alert\";\nimport Alert from \"./Alert\";\nimport { useTimeout } from \"./useTimeout\";\nimport POSITIONS from \"./Positions\";\n\ninterface MessageCallback {\n  id: string;\n  onClose: () => void;\n}\n\nexport type MessageType = \"default\" | \"success\" | \"error\";\n\nexport type PositionsType = keyof typeof POSITIONS;\n\nconst getStyle = (position: PositionsType) => {\n  let style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  } as React.CSSProperties;\n\n  if (position.includes(\"right\")) {\n    style.alignItems = \"flex-end\";\n  } else if (position.includes(\"left\")) {\n    style.alignItems = \"flex-start\";\n  }\n\n  return style;\n};\n\nexport type MessageProp =\n  | React.ReactNode\n  | ((callback: MessageCallback) => React.ReactNode)\n  | string;\n\nexport interface MessageOptions {\n  id: string;\n  duration: number | null;\n  type: MessageType;\n  onRequestRemove: () => void;\n  onRequestClose: () => void;\n  showing: boolean;\n  position: PositionsType;\n}\n\ninterface Props extends MessageOptions {\n  message: MessageProp;\n  zIndex?: number;\n  requestClose?: boolean;\n  position: PositionsType;\n}\n\nexport const Message = ({\n  id,\n  message,\n  position,\n  onRequestRemove,\n  requestClose = false,\n  duration = 30000,\n  type\n}: Props) => {\n  const container = React.useRef<HTMLDivElement | null>(null);\n  const [timeout, setTimeout] = React.useState(duration);\n  const [localShow, setLocalShow] = React.useState(true);\n\n  const isFromTop =\n    position === \"top-left\" || position === \"top-right\" || position === \"top\";\n\n  useTimeout(close, timeout);\n\n  const animation = {\n    config: { mass: 1, tension: 185, friction: 26 },\n    from: {\n      opacity: 1,\n      height: 0,\n      transform: `translateY(${isFromTop ? \"-100%\" : 0}) scale(1)`\n    },\n    enter: () => (next: any) =>\n      next({\n        opacity: 1,\n        height: container.current!.getBoundingClientRect().height,\n        transform: `translateY(0) scale(1)`\n      }),\n    leave: {\n      opacity: 0,\n      height: 0,\n      transform: `translateY(0 scale(0.9)`\n    },\n    onRest\n  } as any;\n\n  const transition = useTransition(localShow, animation);\n  const style = React.useMemo(() => getStyle(position), [position]);\n\n  function onMouseEnter() {\n    setTimeout(null);\n  }\n\n  function onMouseLeave() {\n    setTimeout(duration);\n  }\n\n  function onRest() {\n    if (!localShow) {\n      onRequestRemove();\n    }\n  }\n\n  function close() {\n    setLocalShow(false);\n  }\n\n  React.useEffect(() => {\n    if (requestClose) {\n      setLocalShow(false);\n    }\n  }, [requestClose]);\n\n  function renderMessage() {\n    if (typeof message === \"string\" || React.isValidElement(message)) {\n      return <Alert id={id} title={message} type={type} onClose={close} />;\n    }\n\n    if (typeof message === \"function\") {\n      return message({\n        id,\n        onClose: close\n      });\n    }\n\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      {transition(\n        ( props, item ) =>\n          item && (\n            <animated.div\n              key={'1'}\n              className=\"Toaster__message\"\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              style={{\n                opacity: props.opacity,\n                height: props.height,\n                ...style\n              }}\n            >\n              <animated.div\n                style={{\n                  transform: props.transform,\n                  pointerEvents: \"auto\"\n                }}\n                ref={container}\n                className=\"Toaster__message-wrapper\"\n              >\n                <ReachAlert>{renderMessage()}</ReachAlert>\n              </animated.div>\n            </animated.div>\n          )\n      )}\n    </React.Fragment>\n  );\n};","import * as React from \"react\";\nimport {\n  Message,\n  PositionsType,\n  MessageType,\n  MessageOptions,\n  MessageProp\n} from \"./Message\";\n\ninterface Props {\n  notify: (fn: Function, closeAll: Function, close: Function) => void;\n}\n\nexport interface MessageOptionalOptions {\n  type?: MessageType;\n  duration?: number | null;\n  position?: PositionsType;\n}\n\ninterface ToastArgs extends MessageOptions {\n  message: MessageProp;\n}\n\ntype State = {\n  top: Array<ToastArgs>;\n  \"top-left\": Array<ToastArgs>;\n  \"top-right\": Array<ToastArgs>;\n  \"bottom-left\": Array<ToastArgs>;\n  bottom: Array<ToastArgs>;\n  \"bottom-right\": Array<ToastArgs>;\n};\n\nconst defaultState: State = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": []\n};\n\nexport default class ToastManager extends React.Component<Props, State> {\n  static idCounter = 0;\n\n  state: State = defaultState;\n\n  constructor(props: Props) {\n    super(props);\n    props.notify(this.notify, this.closeAll, this.closeToast);\n  }\n\n  notify = (message: MessageProp, options: MessageOptionalOptions) => {\n    const toast = this.createToastState(message, options);\n    const { position } = toast;\n\n    // prepend the toast for toasts positioned at the top of\n    // the screen, otherwise append it.\n    const isTop = position.includes(\"top\");\n\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: isTop\n          ? [toast, ...prev[position]]\n          : [...prev[position], toast]\n      };\n    });\n    return { id: toast.id, position: toast.position };\n  };\n\n  closeAll = () => {\n    Object.keys(this.state).forEach(pos => {\n      const p = pos as keyof State;\n      const position = this.state[p];\n      position.forEach((toast: any) => {\n        this.closeToast(toast.id, p);\n      });\n    });\n  };\n\n  createToastState = (\n    message: MessageProp,\n    options: MessageOptionalOptions\n  ) => {\n    const id = ++ToastManager.idCounter;\n\n    // a bit messy, but object.position returns a number because\n    // it's a method argument.\n    const position =\n      options.hasOwnProperty(\"position\") && typeof options.position === \"string\"\n        ? options.position\n        : \"top\";\n\n    return {\n      id,\n      message,\n      position,\n      showing: true,\n      duration:\n        typeof options.duration === \"undefined\" ? 5000 : options.duration,\n      onRequestRemove: () => this.removeToast(String(id), position),\n      type: options.type\n    };\n  };\n\n  closeToast = (id: string, position: PositionsType) => {\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: prev[position].map(toast => {\n          if (toast.id !== id) return toast;\n          return {\n            ...toast,\n            requestClose: true\n          };\n        })\n      };\n    });\n  };\n\n  // actually fully remove the toast\n  removeToast = (id: string, position: PositionsType) => {\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: prev[position].filter(toast => toast.id !== id)\n      };\n    });\n  };\n\n  getStyle = (position: PositionsType) => {\n    let style: React.CSSProperties = {\n      maxWidth: \"560px\",\n      position: \"fixed\",\n      zIndex: 5500,\n      pointerEvents: \"none\"\n    };\n\n    if (position === \"top\" || position === \"bottom\") {\n      style.margin = \"0 auto\";\n      style.textAlign = \"center\";\n    }\n\n    if (position.includes(\"top\")) {\n      style.top = 0;\n    }\n\n    if (position.includes(\"bottom\")) {\n      style.bottom = 0;\n    }\n\n    if (!position.includes(\"left\")) {\n      style.right = 0;\n    }\n\n    if (!position.includes(\"right\")) {\n      style.left = 0;\n    }\n\n    return style;\n  };\n\n  render() {\n    return Object.keys(this.state).map(thisPosition => {\n      const pos = thisPosition as keyof State;\n      const toasts = this.state[pos];\n      return (\n        <span\n          key={thisPosition}\n          className={\"Toaster__manager-\" + pos}\n          style={this.getStyle(pos)}\n        >\n          {toasts.map((toast: ToastArgs) => {\n            return <Message {...toast} position={pos} key={toast.id} />;\n          })}\n        </span>\n      );\n    });\n  }\n}","import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager, { MessageOptionalOptions } from \"./ToastManager\";\nimport { MessageProp, PositionsType } from \"./Message\";\n\nconst isBrowser =\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\n\nclass Toaster {\n  createNotification?: Function;\n  removeAll?: Function;\n  closeToast?: Function;\n\n  constructor() {\n    if (!isBrowser) {\n      return;\n    }\n\n    let portalElement;\n    const existingPortalElement = document.getElementById(PORTAL_ID);\n\n    if (existingPortalElement) {\n      portalElement = existingPortalElement;\n    } else {\n      const el = document.createElement(\"div\");\n      el.id = PORTAL_ID;\n      el.className = \"Toaster\";\n      if (document.body != null) {\n        document.body.appendChild(el);\n      }\n      portalElement = el;\n    }\n\n    ReactDOM.render(\n      <ToastManager notify={this.bindNotify as any} />,\n      portalElement\n    );\n  }\n\n  closeAll = () => {\n    if (this.removeAll) {\n      this.removeAll();\n    }\n  };\n\n  bindNotify = (fn: Function, removeAll: Function, closeToast: Function) => {\n    this.createNotification = fn;\n    this.removeAll = removeAll;\n    this.closeToast = closeToast;\n  };\n\n  notify = (message: MessageProp, options: MessageOptionalOptions = {}) => {\n    if (this.createNotification) {\n      return this.createNotification(message, options);\n    }\n  };\n\n  close = (id: number, position: PositionsType) => {\n    if(this.closeToast){\n      this.closeToast(id, position);\n    }\n  }\n}\n\nexport default Toaster;","import Toaster from \"./Toast\";\n\nconst toaster = new Toaster();\n\nexport { default as Position } from \"./Positions\";\n\nexport default toaster;","import { useState } from \"react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col,\n  Spinner,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"contexts/AuthContextProvider\";\nimport useForm from \"helpers/useForm\";\nimport { forgotPasswordValidate } from \"helpers/validateRules\";\n\nimport { useLocalization } from \"contexts/LocalizationContextProvider\";\nimport { errorCode } from \"utils/ServiceAPIUtil\";\nimport toaster from \"components/toaster\";\n\nimport AuthHeader from \"containers/Auth/AuthHeader\";\nimport AuthNavbar from \"containers/Auth/AuthNavbar\";\nimport HomeFooter from \"containers/Home/HomeFooter\";\n\nconst initialValues = {\n  email: \"\",\n};\n\nconst ForgotPassword = () => {\n  const { strings }: any = useLocalization();\n  const { values, errors, handleChange, handleSubmit, setUpdateValue } =\n    useForm(initialValues, handleSubmitCB, forgotPasswordValidate);\n  const { forgotPassword } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [globalErrMsg, setGlobalErrMsg] = useState(\"\");\n\n  function handleSubmitCB() {\n    setLoading(true);\n    forgotPassword({\n      email: values.email,\n    })\n      .then((res) => {\n        if (res.emailExists) {\n          toaster.notify(\"Reset link has been sent to your email id.\", {\n            position: \"top-right\",\n            type: \"success\",\n          });\n        }\n        setUpdateValue(\"email\", \"\");\n        setGlobalErrMsg(\"\");\n        setLoading(false);\n      })\n      .catch((err: any) => {\n        setGlobalErrMsg(\n          strings[\"error.\" + errorCode(err)] || strings[\"error.e10100\"]\n        );\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      <div className=\"main-content bg-default\">\n        <AuthNavbar />\n        <AuthHeader title=\"Forgot Password\" lead=\"\" />\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Col lg=\"5\" md=\"7\">\n              <Card className=\"bg-secondary border-0 mb-0\">\n                <CardBody className=\"px-lg-5 py-lg-5\">\n                  <div className=\"text-center text-muted mb-4\">\n                    <small>Forgot Your Password?</small>\n                  </div>\n                  {globalErrMsg !== \"\" && (\n                    <div\n                      className=\"text-center mb-3 error\"\n                      style={{ color: \"#B94A48\" }}\n                    >\n                      {globalErrMsg}\n                    </div>\n                  )}\n                  <Form role=\"form\" onSubmit={handleSubmit}>\n                    <FormGroup className={classnames(\"mb-3 focused\")}>\n                      <InputGroup className=\"input-group-merge input-group-alternative\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"ni ni-email-83\" />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          placeholder=\"Email\"\n                          value={values.email}\n                          type=\"text\"\n                          onChange={handleChange}\n                          name=\"email\"\n                          autoComplete=\"off\"\n                        />\n                      </InputGroup>\n                      {errors.email && (\n                        <span className=\"error\">{errors.email}</span>\n                      )}\n                    </FormGroup>\n                    <div className=\"text-center\">\n                      <Button className=\"my-4\" color=\"info\" type=\"submit\">\n                        {loading ? <Spinner size=\"sm\" /> : \"CONTINUE\"}\n                      </Button>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n              <Row className=\"mt-3\">\n                <Col xs=\"6\">\n                  <Link className=\"text-light\" to=\"/login\">\n                    <small>Login</small>\n                  </Link>\n                </Col>\n                <Col className=\"text-right\" xs=\"6\">\n                  <Link className=\"text-light\" to=\"/signup\">\n                    <small>Sign up</small>\n                  </Link>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n        <HomeFooter />\n      </div>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n"],"sourceRoot":""}