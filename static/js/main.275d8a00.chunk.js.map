{"version":3,"sources":["config/constant.ts","contexts/LocalizationContextProvider.tsx","contexts/ModalContextProvider.tsx","components/Loading.tsx","utils/CommonUtils.ts","routes/routes.tsx","utils/ApolloUtils.ts","helpers/session.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/ServiceAPIUtil.ts","graphql/auth.ts","contexts/AuthContextProvider.tsx","graphql/users.ts"],"names":["require","config","API_URL","JWTToken","process","DEFAULT_LANGUAGE","APP_LANGUAGE_KEY","strings","LocalizedStrings","en","LocalizationContext","createContext","setAppLanguage","_","appLanguage","LocalizationContextProvider","children","useState","setLanguage","language","setItem","useEffect","console","debug","initAppLanguage","a","getItem","currentLanguage","Provider","value","useLocalization","context","useContext","undefined","Error","initialState","isModal","modalData","isDeleteModal","openModal","closeModal","openDeleteModal","deleteModalData","closeDeleteModal","ModalContext","ModalContextProvider","useReducer","state","action","name","dispatch","modalActions","React","useMemo","useModal","Loading","style","width","height","display","alignItems","justifyContent","animation","variant","key","localStorage","error","getToken","accessToken","isToken","tokenData","JSON","parse","validateFileExt","fileName","validFileExtensions","length","blnValid","j","validExt","substr","toLowerCase","getComparisonData","reqValues","axios","method","url","data","res","NoMatch","lazy","Home","Login","Signup","VendorSignup","ForgotPassword","ResetPassword","Dashboard","AdminResetPassword","Users","OrgVendors","OrgItems","RFQ","VendorRFQBiddingDetails","BuyerRFQBiddingDetails","Profile","VendorProfile","Comparison","GuestRoute","useAuth","location","accountProfile","useLocation","to","from","ProtectedRoute","log","RoutesScreen","fallback","path","element","authLink","ApolloLink","operation","forward","setContext","headers","authorization","uploadLink","createUploadLink","uri","credentials","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","SessionTimeout","timeStamp","events","setSecond","isOpen","setOpen","logout","warningInactiveInterval","useRef","startTimerInterval","timeChecker","current","setTimeout","storedTimeStamp","warningInactive","timeString","clearTimeout","setInterval","diff","moment","duration","minPast","minutes","leftSecond","seconds","clearInterval","removeItem","resetTimer","useCallback","forEach","event","window","addEventListener","Modal","className","type","onClick","Button","color","App","CookiesProvider","AuthContextProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","isSuccess","endpoint","payload","responseCode","errorCode","err","networkError","graphQLErrors","message","LOGIN_QUERY","gql","FORGOT_PASSWORD_QUERY","RESET_PASSWORD_QUERY","PASSWORD_RESET_TOKEN_VALID_QUERY","REFRESH_TOKEN_QUERY","userType","userAccessType","refetchAccountProfile","signup","vendorSignup","login","forgotPassword","resetPassword","isPasswordResetTokenValid","refreshToken","AuthContext","apolloClient","useApolloClient","useMutation","SIGNUP_QUERY","userSignup","VENDOR_SIGNUP_QUERY","userVendorSignup","_state","authCheck","tokenObj","authActions","doLogout","doLogin","response","accessTokenDecrypt","jwt","verify","stringify","getAccountProfile","query","ACCOUNT_PROFILE_QUERY","variables","input","id","useCookies","setCookie","removeCookie","username","password","rememberMe","fetchPolicy","email","token","oldPassword","passwordResetTokenValid","formValues","authChildren","GET_VENDOR_PROFILE_QUERY","GET_DASHBOARD_OVERVIEW_QUERY","GET_DASHBOARD_CHART_OVERVIEW_QUERY","GET_USERS_QUERY","GET_ORG_VENDORS_QUERY","CREATE_USER_MUTATION","CREATE_ORG_VENDOR_MUTATION","UPDATE_USER_MUTATION","UPDATE_USER_PROFILE_MUTATION","UPDATE_VENDOR_PROFILE_MUTATION","DELETE_USER_MUTATION","DELETE_ORG_VENDOR_MUTATION"],"mappings":"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","file":"static/js/main.275d8a00.chunk.js","sourcesContent":["require('dotenv').config();\r\nconst L_SITE_URL = \"http://localhost:3000\";\r\nexport const L_API_URL = \"http://localhost:8080/graphql\";\r\nconst P_SITE_URL = \"https://bidtoaster.com\";\r\nexport const P_API_URL = \"https://rfq2supplier.com/graphql\";\r\nexport const SITE_URL = process.env.NODE_ENV === \"production\" ? P_SITE_URL : L_SITE_URL;\r\nexport const API_URL = process.env.NODE_ENV === \"production\" ? P_API_URL : L_API_URL;\r\nexport const JWTToken = (process.env.REACT_APP_JWTToken || \"\");","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport LocalizedStrings from 'react-localization';\nimport en from '../localization/en.json';\nimport { getItem, setItem } from 'utils/CommonUtils';\n\nconst DEFAULT_LANGUAGE = 'en';\nconst APP_LANGUAGE_KEY = 'appLanguage';\n\nconst strings = new LocalizedStrings({ en });\n\nexport const LocalizationContext = createContext({\n    strings: strings,\n    setAppLanguage: (_: string) => {},\n    appLanguage: DEFAULT_LANGUAGE,\n});\n\n/**\n * LocalizationContextProvider manages localization/i18n strings for the app. It allows switching the app language\n * on the fly and allows overriding the localized strings via server configuration.\n */\nexport const LocalizationContextProvider = ({ children }: { children: React.ReactNode }) => {\n    const [appLanguage, setAppLanguage] = useState(DEFAULT_LANGUAGE);\n\n    const setLanguage = (language: string) => {\n        strings.setLanguage(language);\n        setAppLanguage(language);\n        setItem(APP_LANGUAGE_KEY, language);\n    };\n\n    /**\n     * Run the side-effect on initial load only\n     */\n    useEffect(() => {\n        console.debug('[LocalizationContext] Setup app lang');\n\n        const initAppLanguage = async () => {\n            const currentLanguage = await getItem(APP_LANGUAGE_KEY);\n            setLanguage(currentLanguage || DEFAULT_LANGUAGE);\n        };\n\n        // Determines and sets up the language to use\n        initAppLanguage();\n\n    }, []);\n\n    return (\n        <LocalizationContext.Provider\n            value={{\n                strings,\n                setAppLanguage: setLanguage,\n                appLanguage,\n            }}>\n            {children}\n        </LocalizationContext.Provider>\n    );\n};\n\nexport const useLocalization = () => {\n    const context = useContext(LocalizationContext);\n    if (context === undefined) {\n        throw new Error('useLocalization must be used within a LocalizationContext');\n    }\n    return context;\n};\n\n","import React, { createContext, useReducer, useContext } from \"react\";\nimport { StringMap } from \"helpers/interfaces\";\nexport interface ModalState {\n  isModal: boolean;\n  modalData?: StringMap | null;\n  isDeleteModal: boolean;\n  openModal: (modalData: StringMap | null) => void;\n  closeModal: () => void;\n  openDeleteModal: () => void;\n  deleteModalData?: StringMap | null;\n  closeDeleteModal: () => void;\n}\n\nexport const initialState: ModalState = {\n  isModal: false,\n  modalData: null,\n  isDeleteModal: false,\n  openModal: () => {},\n  closeModal: () => {},\n  openDeleteModal: () => {},\n  deleteModalData: null,\n  closeDeleteModal: () => {},\n};\n\nexport const ModalContext = createContext(initialState);\n\nexport const ModalContextProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const controlReducer = (state: ModalState, action: any): ModalState => {\n    switch (action.name) {\n      case \"MODAL\":\n        return {\n          ...state,\n          isModal: !state.isModal,\n          modalData: action.modalData,\n        };\n      case \"DELETE_MODAL\":\n        return {\n          ...state,\n          isDeleteModal: !state.isDeleteModal,\n          deleteModalData: action.deleteModalData,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n\n  const [state, dispatch] = useReducer(controlReducer, initialState);\n\n  const modalActions = React.useMemo(\n    () => ({\n      openModal: (modalData: StringMap | null) => {\n        dispatch({\n          name: \"MODAL\",\n          modalData,\n        });\n      },\n      closeModal: () => {\n        dispatch({\n          name: \"MODAL\",\n          modalData: null,\n        });\n      },\n      openDeleteModal: (deleteModalData: StringMap | null = null) => {\n        dispatch({\n          name: \"DELETE_MODAL\",\n          deleteModalData,\n        });\n      },\n      closeDeleteModal: () => {\n        dispatch({\n          name: \"DELETE_MODAL\",\n          deleteModalData: null,\n        });\n      },\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <ModalContext.Provider\n      value={{\n        ...state,\n        ...modalActions,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport const useModal = () => {\n  const context = useContext(ModalContext);\n  if (context === undefined) {\n    throw new Error(\"useModal must be used within a ModalContext\");\n  }\n  return context;\n};\n","import React from 'react';\n\nimport {\n  Spinner,\n  Row\n} from \"reactstrap\";\n\nconst Loading = () => {\n\n    return (\n      <Row style={{ width: \"100%\", height: \"100vh\", display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n        <Spinner animation=\"border\" variant=\"dark\" />\n      </Row>\n    );\n}\n\nexport default Loading;","import axios from \"axios\";\n\nexport const setItem = async (key: string, value: any) => {\n  try {\n    await null;\n    return localStorage.setItem(key, value);\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getItem = async (key: string) => {\n  try {\n    await null;\n    return localStorage.getItem(key);\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getToken = () => {\n  let accessToken = null;\n  let isToken = localStorage.getItem(\"bt.token\" || \"\");\n  if (isToken !== null && isToken) {\n    let tokenData = JSON.parse(isToken);\n    if (tokenData !== null && tokenData.accessToken !== undefined) {\n      accessToken = tokenData.accessToken;\n    }\n  }\n\n  return accessToken;\n};\n\nexport function validateFileExt(fileName: any, validFileExtensions: any[]) {\n  if (fileName.length > 0) {\n    let blnValid = false;\n    for (let j = 0; j < validFileExtensions.length; j++) {\n      let validExt = validFileExtensions[j];\n      if (\n        fileName\n          .substr(fileName.length - validExt.length, validExt.length)\n          .toLowerCase() === validExt.toLowerCase()\n      ) {\n        blnValid = true;\n        break;\n      }\n    }\n    if (!blnValid) return false;\n  }\n  return true;\n}\n\nexport async function getComparisonData(reqValues: {\n  comparisonName: string;\n  comparisonDate: string;\n  buyerDescription: any[];\n  buyerFileupload: any[];\n  vendorDescription: any[];\n  vendorFileupload: any[];\n}) {\n  const res = await axios({\n    method: \"post\",\n    url: \"http://52.187.104.169:5001/dashboard_comparison/\",\n    data: reqValues,\n    // headers: { \"Content-Type\": \"multipart/form-data\" },\n  });\n\n  return res;\n}\n","import { lazy, Suspense } from \"react\";\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\nimport Loading from \"components/Loading\";\nimport { useAuth } from \"contexts/AuthContextProvider\";\n\nconst NoMatch = lazy(() => import(\"components/NoMatch\"));\nconst Home = lazy(() => import(\"pages/Home\"));\nconst Login = lazy(() => import(\"pages/Login\"));\nconst Signup = lazy(() => import(\"pages/Signup\"));\nconst VendorSignup = lazy(() => import(\"pages/VendorSignup\"));\nconst ForgotPassword = lazy(() => import(\"pages/ForgotPassword\"));\nconst ResetPassword = lazy(() => import(\"pages/ResetPassword\"));\nconst Dashboard = lazy(() => import(\"pages/Dashboard\"));\nconst AdminResetPassword = lazy(\n  () => import(\"containers/Settings/AdminResetPassword\")\n);\nconst Users = lazy(() => import(\"pages/Users\"));\nconst OrgVendors = lazy(() => import(\"pages/OrgVendors\"));\nconst OrgItems = lazy(() => import(\"pages/OrgItems\"));\nconst RFQ = lazy(() => import(\"pages/RFQ\"));\nconst VendorRFQBiddingDetails = lazy(\n  () => import(\"containers/RFQ/VendorRFQBiddingDetails\")\n);\nconst BuyerRFQBiddingDetails = lazy(\n  () => import(\"containers/RFQ/BuyerRFQBiddingDetails\")\n);\nconst Profile = lazy(() => import(\"pages/Profile\"));\nconst VendorProfile = lazy(() => import(\"pages/VendorProfile\"));\nconst Comparison = lazy(() => import(\"pages/Comparison\"));\n\nfunction GuestRoute({ children }: { children: JSX.Element }) {\n  const { accessToken, accountProfile } = useAuth();\n  let location = useLocation();\n\n  if (accessToken === undefined) return null;\n  if (accessToken) {\n    return <Navigate to={\"/dashboard\"} state={{ from: location }} />;\n    // if(accountProfile && accountProfile.userAccessType === \"organization\")\n    // return <Navigate to={\"/users\"} state={{ from: location }} />;\n    // else if(accountProfile && (accountProfile.userAccessType === \"buyer\" || accountProfile.userAccessType === \"vendor\"))\n    // return <Navigate to={\"/rfq\"} state={{ from: location }} />;\n  }\n\n  return children;\n}\n\nfunction ProtectedRoute({ children }: { children: JSX.Element }) {\n  const { accessToken, accountProfile } = useAuth();\n  console.log('accountProfile', accountProfile);\n  console.log('accessToken', accessToken);\n  let location = useLocation();\n  if (accessToken === undefined) return null;\n  if (!accessToken) {\n    return <Navigate to=\"/login\" state={{ from: location }} />;\n  }\n\n  return children;\n}\n\nconst RoutesScreen = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <Routes>\n        <Route path=\"*\" element={<NoMatch />} />\n        <Route path=\"/\" element={<Home />} />\n        <Route\n          path=\"/login\"\n          element={\n            <GuestRoute>\n              <Login />\n            </GuestRoute>\n          }\n        />\n        <Route\n          path=\"/signup\"\n          element={\n            <GuestRoute>\n              <Signup />\n            </GuestRoute>\n          }\n        />\n        <Route\n          path=\"/vendor-signup\"\n          element={\n            <GuestRoute>\n              <VendorSignup />\n            </GuestRoute>\n          }\n        />\n        <Route\n          path=\"/forgot-password\"\n          element={\n            <GuestRoute>\n              <ForgotPassword />\n            </GuestRoute>\n          }\n        />\n        <Route\n          path=\"/reset-password/:token\"\n          element={\n            <GuestRoute>\n              <ResetPassword />\n            </GuestRoute>\n          }\n        />\n\n        <Route\n          path=\"/dashboard\"\n          element={\n            <ProtectedRoute>\n              <Dashboard />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/settings/reset-password\"\n          element={\n            <ProtectedRoute>\n              <AdminResetPassword />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/users\"\n          element={\n            <ProtectedRoute>\n              <Users />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/org-vendors\"\n          element={\n            <ProtectedRoute>\n              <OrgVendors />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/org-items\"\n          element={\n            <ProtectedRoute>\n              <OrgItems />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/rfq\"\n          element={\n            <ProtectedRoute>\n              <RFQ />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/vendor/rfq/view/:id\"\n          element={\n            <ProtectedRoute>\n              <VendorRFQBiddingDetails />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/buyer/rfq/view/:id\"\n          element={\n            <ProtectedRoute>\n              <BuyerRFQBiddingDetails />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/profile\"\n          element={\n            <ProtectedRoute>\n              <Profile />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/vendor-profile\"\n          element={\n            <ProtectedRoute>\n              <VendorProfile />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/comparison\"\n          element={\n            <ProtectedRoute>\n              <Comparison />\n            </ProtectedRoute>\n          }\n        />\n      </Routes>\n    </Suspense>\n  );\n};\n\nexport default RoutesScreen;\n","import {\n  ApolloClient,\n  InMemoryCache,\n  from,\n  ApolloLink,\n  ApolloProvider as Provider,\n} from \"@apollo/client\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { API_URL } from \"config/constant\";\nimport { getToken } from \"utils/CommonUtils\";\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers }: any) => ({\n    headers: {\n      authorization: getToken() ? getToken() : \"\",\n      ...headers,\n    },\n  }));\n  \n  return forward(operation);\n});\n\nconst uploadLink = createUploadLink({\n  uri: API_URL,\n  credentials: \"same-origin\",\n});\n\nexport const client = new ApolloClient({\n  link: from([authLink.concat(uploadLink)]),\n  cache: new InMemoryCache(),\n});\n\nexport const ApolloProvider = Provider;\n","import React, {\r\n    useState,\r\n    useEffect,\r\n    useCallback,\r\n    useRef,\r\n  } from 'react';\r\n  import moment from 'moment';\r\nimport { useAuth } from 'contexts/AuthContextProvider';\r\nimport { Button, Card, CardBody, CardHeader, Modal } from 'reactstrap';\r\n\r\n  \r\n  const SessionTimeout = () => {\r\n    const [events, setEvents] = useState(['click', 'load', 'scroll']);\r\n    const [second, setSecond] = useState(0);\r\n    const [isOpen, setOpen] = useState(false);\r\n    const {\r\n      accessToken,\r\n      logout,\r\n    } = useAuth();\r\n  \r\n    let timeStamp:any;\r\n    let warningInactiveInterval = useRef<any>();\r\n    let startTimerInterval = useRef<any>();\r\n  \r\n    // start inactive check\r\n    let timeChecker = () => {\r\n        console.log('timeString csca');\r\n      startTimerInterval.current = setTimeout(() => {\r\n        let storedTimeStamp = localStorage.getItem('lastTimeStamp');\r\n        warningInactive(storedTimeStamp);\r\n      }, 60000 * 10);\r\n    };\r\n  \r\n    // warning timer\r\n    let warningInactive = (timeString:any) => {\r\n      clearTimeout(startTimerInterval.current);\r\n  \r\n      warningInactiveInterval.current = setInterval(() => {\r\n        const maxTime = 2;\r\n        const popTime = 1;\r\n  \r\n        const diff = moment.duration(moment().diff(moment(timeString)));\r\n        const minPast = diff.minutes();\r\n        const leftSecond = 60 - diff.seconds();\r\n        if (minPast === popTime) {\r\n          setSecond(leftSecond);\r\n          setOpen(true);\r\n        }\r\n  \r\n        if (minPast === maxTime) {\r\n          clearInterval(warningInactiveInterval.current);\r\n          setOpen(false);\r\n          localStorage.removeItem('lastTimeStamp');\r\n          logout();\r\n        }\r\n      }, 1000);\r\n    };\r\n  \r\n    // reset interval timer\r\n    let resetTimer = useCallback(() => {\r\n      clearTimeout(startTimerInterval.current);\r\n      clearInterval(warningInactiveInterval.current);\r\n        console.log('lastTimeStamp', accessToken);\r\n        \r\n      if (localStorage.getItem('bt.token')) {\r\n        timeStamp = moment();\r\n        localStorage.setItem('lastTimeStamp', timeStamp);\r\n      } else {\r\n        clearInterval(warningInactiveInterval.current);\r\n        localStorage.removeItem('lastTimeStamp');\r\n      }\r\n      timeChecker();\r\n      setOpen(false);\r\n    }, [accessToken]);\r\n  \r\n    // handle close popup\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n  \r\n      resetTimer();\r\n    };\r\n  \r\n    useEffect(() => {\r\n      events.forEach((event) => {\r\n        window.addEventListener(event, resetTimer);\r\n      });\r\n  \r\n      timeChecker();\r\n  \r\n      return () => {\r\n        clearTimeout(startTimerInterval.current);\r\n        //   resetTimer();\r\n      };\r\n    }, [resetTimer, events, timeChecker]);\r\n  \r\n    if (!isOpen) {\r\n      return null;\r\n    }\r\n  \r\n    // change fragment to modal and handleclose func to close\r\n    return (\r\n        <div>\r\n        <Modal className=\"modal-dialog-centered\" isOpen={isOpen}>\r\n            <div className=\"modal-header\">\r\n            <strong>Session Expire Warning</strong>\r\n            <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => resetTimer()}>\r\n                <span aria-hidden={true}>×</span>\r\n            </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <p>your session will expire in.</p>\r\n            <p>Do you want to extend the session?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n            <Button color=\"primary\" type=\"button\" onClick={() => logout()}>Logout</Button>\r\n            <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={()=> {resetTimer() }}>Extend Session</Button>\r\n            </div>\r\n        </Modal>\r\n        </div>\r\n         )\r\n  };\r\n  \r\n  export default SessionTimeout;","import { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"routes/routes\";\nimport { AuthContextProvider } from \"contexts/AuthContextProvider\";\nimport { LocalizationContextProvider } from \"contexts/LocalizationContextProvider\";\nimport { ModalContextProvider } from \"contexts/ModalContextProvider\";\nimport { ApolloProvider, client } from \"utils/ApolloUtils\";\nimport unspscDataList from \"assets/json/unspsc.json\";\nimport { CookiesProvider } from 'react-cookie';\nimport SessionTimeout from \"helpers/session\";\n\nconst App = () => {\n//   window.addEventListener(\"beforeunload\", (ev) => {\n//     ev.preventDefault();\n//     console.log('close tab', localStorage.getItem('bt.token'));\n//     // localStorage.clear();\n//     // return ev.returnValue = '';\n//     if (window.performance) {\n//       console.info(\"window.performance work's fine on this browser\");\n//     }\n//       if (performance.navigation.type == 1) {\n//         console.info( \"This page is reloaded\" );\n//       } else {\n//         localStorage.removeItem('bt.token');\n//         console.info( \"This page is not reloaded\");\n//       }\n// });\n  return (\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n          <CookiesProvider>\n          <LocalizationContextProvider>\n            <AuthContextProvider>\n              <ModalContextProvider>\n                <Routes />\n                <SessionTimeout />\n              </ModalContextProvider>\n            </AuthContextProvider>\n          </LocalizationContextProvider>\n        </CookiesProvider>\n      </ApolloProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./assets/css/argon-dashboard-pro-react.css\";\nimport \"./assets/css/common.css\";\nimport \"./assets/css/toast.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export interface AccountProfile {\n  id: number;\n  firstName: string;\n  email: string;\n  phoneNumber: string;\n}\n\nexport const isSuccess = (\n  endpoint: string,\n  payload: { [key: string]: any } | undefined | null\n) => {\n  return payload && payload[endpoint] && payload[endpoint].responseCode === \"1\";\n};\n\nexport const errorCode = (err: { [key: string]: any }) => {\n  let errorCode = \"\";\n  if (err.networkError) {\n    errorCode = err.networkError;\n  } else if (err.graphQLErrors) {\n    err.graphQLErrors.forEach((err: any) => {\n      errorCode = err.message;\n    });\n  }\n  return errorCode;\n};\n","import gql from 'graphql-tag';\n\nexport const LOGIN_QUERY = gql`\n    query($input: LoginRequest) {\n      login(input: $input) {\n          responseCode\n          data\n      }\n    }\n`;\n\nexport const FORGOT_PASSWORD_QUERY = gql`\n    query($input: ForgotPasswordRequest) {\n      forgotPassword(input: $input) {\n          responseCode\n          data\n      }\n    }\n`;\n\nexport const RESET_PASSWORD_QUERY = gql`\n    query($input: ResetPasswordRequest) {\n      resetPassword(input: $input) {\n          responseCode\n          data\n      }\n    }\n`;\n\nexport const PASSWORD_RESET_TOKEN_VALID_QUERY = gql`\n    query($input: PasswordResetTokenValidRequest) {\n      passwordResetTokenValid(input: $input) {\n          responseCode\n          data\n      }\n    }\n`;\n\nexport const REFRESH_TOKEN_QUERY = gql`\n    query($input: RefreshTokenRequest) {\n      refreshToken(input: $input) {\n          responseCode\n          data\n      }\n    }\n`;","import React, {\n  createContext,\n  useReducer,\n  useContext,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { getItem, setItem } from \"utils/CommonUtils\";\nimport { isSuccess } from \"utils/ServiceAPIUtil\";\nimport { useApolloClient, useMutation } from \"@apollo/client\";\nimport {\n  LOGIN_QUERY,\n  REFRESH_TOKEN_QUERY,\n  FORGOT_PASSWORD_QUERY,\n  RESET_PASSWORD_QUERY,\n  PASSWORD_RESET_TOKEN_VALID_QUERY,\n} from \"graphql/auth\";\nimport {\n  SIGNUP_QUERY,\n  VENDOR_SIGNUP_QUERY,\n  ACCOUNT_PROFILE_QUERY,\n} from \"graphql/users\";\nimport jwt from \"jsonwebtoken\";\nimport { JWTToken } from \"config/constant\";\nimport { UserAccessType, USER_TYPE } from \"helpers/interfaces\";\nimport { StringMap } from \"helpers/interfaces\";\nimport { useCookies } from 'react-cookie';\n\nexport interface UserState {\n  userType: USER_TYPE;\n  error?: Error;\n  accessToken?: string;\n  userAccessType: UserAccessType;\n  accountProfile?: StringMap;\n  refetchAccountProfile: () => Promise<any>;\n  signup: ({\n    userAccessType,\n    firstName,\n    lastName,\n    email,\n    phoneNumber,\n    organizationName,\n    organizationType,\n    natureOfBusiness,\n    companyRegistrationNo,\n    password,\n  }: {\n    userAccessType: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    phoneNumber: string;\n    organizationName: string;\n    organizationType: string;\n    natureOfBusiness: string;\n    companyRegistrationNo: string;\n    password: string;\n  }) => Promise<any>;\n  vendorSignup: (formValues: any) => Promise<any>;\n  login: ({\n    username,\n    password,\n    rememberMe\n  }: {\n    username: string;\n    password: string;\n    rememberMe: boolean;\n  }) => Promise<any>;\n  forgotPassword: ({ email }: { email: string }) => Promise<any>;\n  resetPassword: ({\n    token,\n    oldPassword,\n    password,\n  }: {\n    token: string;\n    oldPassword?: string;\n    password: string;\n  }) => Promise<any>;\n  isPasswordResetTokenValid: ({ token }: { token: string }) => Promise<any>;\n  refreshToken: (tokenData: any) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nexport const initialState: UserState = {\n  userType: \"INIT\",\n  error: undefined,\n  accessToken: undefined,\n  userAccessType: \"buyer\",\n  accountProfile:undefined,\n  refetchAccountProfile: async () => {},\n  signup: async () => {},\n  vendorSignup: async () => {},\n  login: async () => {},\n  forgotPassword: async () => {},\n  resetPassword: async () => {},\n  isPasswordResetTokenValid: async () => {},\n  refreshToken: async () => {},\n  logout: async () => {},\n};\n\nexport const AuthContext = createContext(initialState);\n\nexport const AuthContextProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const apolloClient = useApolloClient();\n  const [userSignup] = useMutation(SIGNUP_QUERY);\n  const [userVendorSignup] = useMutation(VENDOR_SIGNUP_QUERY);\n  // const [currentAccessToken, setCurrentAccessToken] = useState(\"\");\n\n  const controlReducer = (_state: UserState, action: any): UserState => {\n    switch (action.name) {\n      case \"LOG_IN\":\n        return {\n          ..._state,\n          userType: \"LOGGED_IN\",\n          error: undefined,\n          accessToken: action.accessToken,\n          userAccessType: action.userAccessType,\n          accountProfile: action.accountProfile,\n        };\n      case \"LOG_IN_ERROR\":\n        return {\n          ..._state,\n          userType: \"INIT\",\n          error: action.value,\n        };\n      case \"LOG_OUT\": {\n        return {\n          ..._state,\n          userType: \"NOT_LOGGED_IN\",\n          accessToken: \"\",\n          error: undefined,\n        };\n      }\n      case \"UPDATE_ACCOUNT_PROFILE\": {\n        return {\n          ..._state,\n          accountProfile: action.accountProfile,\n        };\n      }\n      default:\n        return {\n          ..._state,\n        };\n    }\n  };\n\n  const [state, dispatch] = useReducer(controlReducer, initialState);\n\n  useEffect(() => {\n    // Fetch the token from storage then navigate to our appropriate place\n    const authCheck = async () => {\n      try {\n        const tokenData = await getItem(\"bt.token\");\n        if (tokenData !== undefined && tokenData !== null) {\n          const tokenObj = JSON.parse(tokenData);\n          await authActions.refreshToken(tokenObj.accessToken);\n          // await doLogin(tokenObj);\n        } else {\n          await doLogout();\n        }\n      } catch {\n        await doLogout();\n      }\n    };\n    authCheck();\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const doLogin = async (response: { accessToken: string }) => {\n    const accessToken = response.accessToken;\n    const accessTokenDecrypt = jwt.verify(accessToken, JWTToken);\n    const userAccessType =\n      typeof accessTokenDecrypt === \"object\"\n        ? accessTokenDecrypt.userAccessType\n        : \"\";\n    const payload = JSON.stringify({ accessToken });\n    await setItem(\"bt.token\", payload);\n    // setCurrentAccessToken(accessToken);\n\n    dispatch({\n      name: \"LOG_IN\",\n      accessToken: accessToken,\n      userAccessType: userAccessType,\n      accountProfile: {},\n    });\n    await getAccountProfile(accessToken);\n  };\n\n  const doLogout = useCallback(async () => {\n    await setItem(\"bt.token\", \"\");\n    await setItem(\"bt.userAccessType\", \"\");\n    await setItem(\"bt.userId\", \"\");\n    // setCurrentAccessToken(\"\");\n    dispatch({ name: \"LOG_OUT\" });\n  }, []);\n\n  const getAccountProfile = useCallback(async (accessToken: string) => {\n    const { data } = await apolloClient.query({\n      query: ACCOUNT_PROFILE_QUERY,\n      variables: { input: { accessToken } },\n    });\n    if (isSuccess(\"getAccountProfile\", data)) {\n      await setItem(\"bt.userId\", data.getAccountProfile.data[0].id);\n      await setItem(\"bt.userAccessType\", data.getAccountProfile.data[0].userAccessType);\n      dispatch({\n        name: \"UPDATE_ACCOUNT_PROFILE\",\n        accountProfile: data.getAccountProfile.data[0],\n      });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  const [cookies, setCookie, removeCookie] = useCookies<any>(['loginUser']);\n  const authActions = React.useMemo(\n    () => ({\n      refetchAccountProfile: async () => {\n        if (state.accessToken) await getAccountProfile(state.accessToken);\n      },\n      login: async ({\n        username,\n        password,\n        rememberMe\n      }: {\n        username: string;\n        password: string;\n        rememberMe: boolean;\n      }) => {\n        const { data } = await apolloClient.query({\n          query: LOGIN_QUERY,\n          variables: { input: { username, password } },\n          fetchPolicy: \"no-cache\",\n        });\n        if (isSuccess(\"login\", data)) {\n          if(rememberMe){\n            setCookie('username', username, { path: '/' });\n            setCookie('password', password, { path: '/' });\n          } else {\n            removeCookie('username');\n            removeCookie('password');\n          }\n          await doLogin(data.login.data);\n        }\n      },\n\n      forgotPassword: async ({ email }: { email: string }) => {\n        const { data } = await apolloClient.query({\n          query: FORGOT_PASSWORD_QUERY,\n          variables: { input: { email } },\n        });\n        if (isSuccess(\"forgotPassword\", data)) {\n          return data.forgotPassword.data;\n        }\n      },\n\n      resetPassword: async ({\n        token,\n        oldPassword,\n        password,\n      }: {\n        token: string;\n        oldPassword?: string;\n        password: string;\n      }) => {\n        const { data } = await apolloClient.query({\n          query: RESET_PASSWORD_QUERY,\n          variables: {\n            input: { token, password, oldPassword: oldPassword || \"\" },\n          },\n        });\n        if (isSuccess(\"resetPassword\", data)) {\n          return data.resetPassword.data;\n        }\n      },\n      isPasswordResetTokenValid: async ({ token }: { token: string }) => {\n        const { data } = await apolloClient.query({\n          query: PASSWORD_RESET_TOKEN_VALID_QUERY,\n          variables: { input: { token } },\n        });\n        if (isSuccess(\"passwordResetTokenValid\", data)) {\n          return data.passwordResetTokenValid.data;\n        }\n      },\n\n      signup: async (formValues: any) => {\n        const { data } = await userSignup({\n          variables: { input: formValues },\n        });\n\n        if (isSuccess(\"signup\", data)) {\n          await authActions.login({\n            username: formValues.email,\n            password: formValues.password,\n            rememberMe:true\n          });\n        }\n      },\n      vendorSignup: async (formValues: any) => {\n        const { data } = await userVendorSignup({\n          variables: { input: formValues },\n        });\n\n        if (isSuccess(\"vendorSignup\", data)) {\n          await authActions.login({\n            username: formValues.email,\n            password: formValues.password,\n            rememberMe:true\n          });\n        }\n      },\n\n      refreshToken: async (accessToken: string) => {\n        const { data } = await apolloClient.query({\n          query: REFRESH_TOKEN_QUERY,\n          variables: { input: { accessToken } },\n        });\n        if (isSuccess(\"refreshToken\", data)) {\n          await doLogin(data.refreshToken.data);\n        } else {\n          authActions.logout();\n        }\n      },\n\n      logout: async () => {\n        await doLogout();\n      },\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state]\n  );\n\n  let authChildren = children;\n  if (state.userType === \"LOGGED_IN\" && !state.accountProfile) {\n    authChildren = null;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        ...authActions,\n      }}\n    >\n      {authChildren}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within a AuthContext\");\n  }\n  return context;\n};\n","import gql from \"graphql-tag\";\n\nexport const ACCOUNT_PROFILE_QUERY = gql`\n  query ($input: AccountProfileRequest) {\n    getAccountProfile(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const GET_VENDOR_PROFILE_QUERY = gql`\n  query ($input: VendorSearchCond) {\n    getVendorProfile(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const SIGNUP_QUERY = gql`\n  mutation ($input: SignupRequest) {\n    signup(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const VENDOR_SIGNUP_QUERY = gql`\n  mutation ($input: VendorSignupRequest) {\n    vendorSignup(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const UPDATE_ACCOUNT_PROFILE_QUERY = gql`\nmutation ($input: UpdateAccountProfileRequest) {\n    updateAccountProfile(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const GET_DASHBOARD_OVERVIEW_QUERY = gql`\n  query ($input: DashboardOverviewCond) {\n    getDashboardOverview(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const GET_DASHBOARD_CHART_OVERVIEW_QUERY = gql`\n  query ($input: DashboardChartOverviewCond) {\n    getDashboardChartOverview(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const GET_USERS_QUERY = gql`\n  query ($input: UsersCond) {\n    getUsers(input: $input) {\n      responseCode\n      data\n      dataCount\n    }\n  }\n`;\n\nexport const GET_ORG_VENDORS_QUERY = gql`\n  query ($input: OrgVendorsCond) {\n    getOrgVendors(input: $input) {\n      responseCode\n      data\n      dataCount\n    }\n  }\n`;\n\n\n// Mutation\nexport const CREATE_USER_MUTATION = gql`\n  mutation ($input: UserFormRequest) {\n    createUser(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const CREATE_ORG_VENDOR_MUTATION = gql`\n  mutation ($input: OrgVendorFormRequest) {\n    createOrgVendor(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const UPDATE_USER_MUTATION = gql`\n  mutation ($input: UserFormRequest) {\n    updateUser(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const UPDATE_USER_PROFILE_MUTATION = gql`\n  mutation ($input: UserProfileFormRequest) {\n    updateProfile(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const UPDATE_VENDOR_PROFILE_MUTATION = gql`\n  mutation ($input: VendorProfileFormRequest) {\n    updateVendorProfile(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const DELETE_USER_MUTATION = gql`\n  mutation ($input: UserDeleteRequest) {\n    deleteUser(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n\nexport const DELETE_ORG_VENDOR_MUTATION = gql`\n  mutation ($input: OrgVendorDeleteRequest) {\n    deleteOrgVendor(input: $input) {\n      responseCode\n      data\n    }\n  }\n`;\n"],"sourceRoot":""}